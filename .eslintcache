[{"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\index.js":"1","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\App.js":"2","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\store\\index.js":"3","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\pages\\Index.js":"4","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\index.js":"5","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\pages\\Generator.js":"6","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\pages\\SignIn.js":"7","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\pages\\Submissions.js":"8","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\pages\\Submit.js":"9","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\pages\\Register.js":"10","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\registerUser.js":"11","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\authenticate.js":"12","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\newCharacter.js":"13","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharIntrigue.js":"14","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\submissions.js":"15","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharDesc.js":"16","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharImage.js":"17","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharRoleplay.js":"18","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\constants\\index.js":"19","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\actions\\index.js":"20","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\actions\\action-types.js":"21","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\index.js":"22","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\Sidebar.js":"23","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\Footer.js":"24","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\Header.js":"25","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\CharImage.js":"26","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\CharRoleplay.js":"27","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharImage.js":"28","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharIntrigue.js":"29","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharRoleplay.js":"30","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\LoadingIcon.js":"31","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedNames.js":"32","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharDesc.js":"33","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedLastNames.js":"34","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedImages.js":"35","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedRoleplays.js":"36","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedIntrigues.js":"37","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\EditEntryModal.js":"38","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\CharIntrigue.js":"39","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\CharDesc.js":"40","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\pages\\index.js":"41"},{"size":305,"mtime":1622063925322,"results":"42","hashOfConfig":"43"},{"size":2889,"mtime":1622064036069,"results":"44","hashOfConfig":"43"},{"size":221,"mtime":1622063925327,"results":"45","hashOfConfig":"43"},{"size":261,"mtime":1622063925323,"results":"46","hashOfConfig":"43"},{"size":641,"mtime":1622063925325,"results":"47","hashOfConfig":"43"},{"size":4884,"mtime":1622064299933,"results":"48","hashOfConfig":"43"},{"size":4237,"mtime":1622063925323,"results":"49","hashOfConfig":"43"},{"size":4457,"mtime":1622063925324,"results":"50","hashOfConfig":"43"},{"size":2015,"mtime":1622063925324,"results":"51","hashOfConfig":"43"},{"size":3562,"mtime":1622063925323,"results":"52","hashOfConfig":"43"},{"size":326,"mtime":1622063925326,"results":"53","hashOfConfig":"43"},{"size":415,"mtime":1622063925325,"results":"54","hashOfConfig":"43"},{"size":312,"mtime":1622063925326,"results":"55","hashOfConfig":"43"},{"size":472,"mtime":1622063925326,"results":"56","hashOfConfig":"43"},{"size":461,"mtime":1622063925326,"results":"57","hashOfConfig":"43"},{"size":343,"mtime":1622063925325,"results":"58","hashOfConfig":"43"},{"size":324,"mtime":1622063925325,"results":"59","hashOfConfig":"43"},{"size":353,"mtime":1622063925326,"results":"60","hashOfConfig":"43"},{"size":980,"mtime":1622063925320,"results":"61","hashOfConfig":"43"},{"size":9227,"mtime":1622063925324,"results":"62","hashOfConfig":"43"},{"size":878,"mtime":1622063925324,"results":"63","hashOfConfig":"43"},{"size":1166,"mtime":1622064056479,"results":"64","hashOfConfig":"43"},{"size":2825,"mtime":1622063925318,"results":"65","hashOfConfig":"43"},{"size":379,"mtime":1622063925317,"results":"66","hashOfConfig":"43"},{"size":628,"mtime":1622063925317,"results":"67","hashOfConfig":"43"},{"size":619,"mtime":1622063925316,"results":"68","hashOfConfig":"43"},{"size":1139,"mtime":1622063925316,"results":"69","hashOfConfig":"43"},{"size":4109,"mtime":1622063925318,"results":"70","hashOfConfig":"43"},{"size":2642,"mtime":1622063925318,"results":"71","hashOfConfig":"43"},{"size":2622,"mtime":1622063925318,"results":"72","hashOfConfig":"43"},{"size":811,"mtime":1622063925318,"results":"73","hashOfConfig":"43"},{"size":2608,"mtime":1622064196735,"results":"74","hashOfConfig":"43"},{"size":3951,"mtime":1622063925317,"results":"75","hashOfConfig":"43"},{"size":2526,"mtime":1622064316853,"results":"76","hashOfConfig":"43"},{"size":2536,"mtime":1622064323397,"results":"77","hashOfConfig":"43"},{"size":2247,"mtime":1622064314293,"results":"78","hashOfConfig":"43"},{"size":2223,"mtime":1622064320277,"results":"79","hashOfConfig":"43"},{"size":4234,"mtime":1622063925317,"results":"80","hashOfConfig":"43"},{"size":890,"mtime":1622063925316,"results":"81","hashOfConfig":"43"},{"size":1327,"mtime":1622063925316,"results":"82","hashOfConfig":"43"},{"size":261,"mtime":1622064095352,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1afxisd",{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\index.js",[],["182","183"],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\App.js",["184","185","186"],"import React from 'react';\r\nimport './index.css';\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router, \r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport { Footer, Header, Sidebar} from './components';\r\nimport { Register, Generator, SignIn, Submit, Submissions } from './pages/index.js';\r\n\r\nconst Wrapper = styled.div`\r\n  background-color:#25292e;\r\n  color:${props => props.theme.fontColor};\r\n  display:flex;\r\n  flex-direction:row;\r\n  height: 100vh;\r\n  min-height:100vh;\r\n  max-height: 100vh;\r\n  margin: 0;\r\n  overflow:hidden;\r\n  width:100%;\r\n\r\n  & .main {\r\n    width:100%;\r\n    max-width:1600px;\r\n    height:100%;\r\n    background-color:#25292e;\r\n    margin:0 auto;\r\n    padding:20px;\r\n  }\r\n`\r\n\r\nfunction App({ authenticated }) {\r\n  return (\r\n    <Router>\r\n\r\n      <Wrapper>\r\n\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n        />\r\n\r\n        <Switch>\r\n            <Route path=\"/signin\">\r\n              <Sidebar className=\"sidebar\" page={'signin'}/>\r\n\r\n              {(authenticated)\r\n              ? <div className=\"main\"><Generator/></div>\r\n              : <div className=\"main\"><SignIn/></div>\r\n              }\r\n            </Route>\r\n\r\n            <Route path=\"/register\">\r\n              <Sidebar className=\"sidebar\" page={'signin'}/>\r\n\r\n              {(authenticated)\r\n                ? <div className=\"main\"><Generator/></div>\r\n                : <div className=\"main\"><Register/></div>\r\n              }\r\n            </Route>\r\n\r\n            <Route path=\"/submissions/:category\">\r\n              <Sidebar className=\"sidebar\" page={'submissions'}/>\r\n              {(authenticated)\r\n                ? <div className=\"main\"><Submissions/></div>\r\n                : <div className=\"main\"><SignIn/></div>\r\n              }\r\n            </Route>\r\n\r\n            <Route path=\"/submit\">\r\n              <Sidebar className=\"sidebar\" page={'submit'}/>\r\n              {(authenticated)\r\n                ? <div className=\"main\"><Submit/></div>\r\n                : <div className=\"main\"><SignIn/></div>\r\n              }\r\n            </Route>\r\n\r\n            <Route path=\"/generator\">\r\n              <Sidebar className=\"sidebar\" page={'generator'}/>\r\n\r\n              <div className=\"main\">\r\n                <Generator/>\r\n              </div>\r\n            </Route>\r\n\r\n            <Route exact path=\"/\">\r\n              <Sidebar className=\"sidebar\" page={'generator'}/>\r\n              <div className=\"main\">\r\n                <Generator/>\r\n              </div>\r\n            </Route>\r\n        \r\n        </Switch>\r\n          \r\n      </Wrapper>\r\n    </Router>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({ authenticated: state.authenticate.authenticated });\r\n\r\nexport default connect(mapStateToProps)(App);","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\store\\index.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\pages\\Index.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\index.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\pages\\Generator.js",["187","188"],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\pages\\SignIn.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\pages\\Submissions.js",["189","190","191"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { getSubmissions } from \"../redux/actions/index\";\r\nimport { \r\n   LoadingIcon,\r\n   SubmittedNames, \r\n   SubmittedLastNames,\r\n   SubmittedImages,\r\n   SubmittedRoleplays,\r\n   SubmittedIntrigues,\r\n   EditEntryModal,\r\n} from '../components';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   flex-direction:column;\r\n   color:#f3f3f3;\r\n\r\n   & .titleContainer {\r\n      width:100%;\r\n      padding-left:20px;\r\n      margin-bottom:10px;\r\n      color:#01a4f6;\r\n      font-size:1.5rem;\r\n      padding:0;\r\n   }\r\n\r\n   & .tabContainer {\r\n      width:100%;\r\n      min-height:10%;\r\n      background-color:#2f3438;\r\n      display:flex;\r\n      justify-content:space-around;\r\n      align-items:center;\r\n      padding:20px;\r\n      border-radius:10px 10px 0 0;\r\n      * {\r\n         color:white;\r\n         text-decoration: none;\r\n         margin-bottom:10px;\r\n         padding:10px;\r\n         opacity:0.8;\r\n\r\n      }\r\n      & .active {\r\n         border-bottom:2px solid #FF3E58;\r\n         opacity:1;\r\n      }\r\n   }\r\n\r\n   & .listContainer {\r\n      width:100%;\r\n      height:90%;\r\n      display:flex;\r\n      flex-direction:column;\r\n      overflow-y:scroll;\r\n      box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);      \r\n   }\r\n`\r\n\r\nconst Submissions = ({\r\n      userEmail, \r\n      getSubmissions,\r\n      isFetching,\r\n   }) => {\r\n   const [modalDisplay, setModalDisplay] = useState(false);\r\n   const [modalData, setModalData] = useState();\r\n   const {category} = useParams();\r\n\r\n   const handleOpenModalDisplay = (entry) => {\r\n      setModalDisplay(true);\r\n      setModalData(entry);\r\n      // console.log(entry.target.dataset.text);\r\n   }\r\n\r\n\r\n   useEffect(()=> {\r\n      getSubmissions(userEmail)\r\n      console.log(category)\r\n   },[userEmail])\r\n\r\n   useEffect(()=> {\r\n      getSubmissions(userEmail)\r\n   },[])\r\n\r\n\r\n   let displayData = false\r\n   switch(category){\r\n      case 'firstnames':\r\n         displayData = <SubmittedNames handleOpenModalDisplay={handleOpenModalDisplay}/>;\r\n         break;\r\n      case 'lastnames':\r\n         displayData = <SubmittedLastNames handleOpenModalDisplay={handleOpenModalDisplay}/>;\r\n         break;\r\n      case 'images':\r\n         displayData = <SubmittedImages handleOpenModalDisplay={handleOpenModalDisplay}/>;\r\n         break;\r\n      case 'roleplay':\r\n         displayData = <SubmittedRoleplays handleOpenModalDisplay={handleOpenModalDisplay}/>;\r\n         break;\r\n      case 'intrigue':\r\n         displayData = <SubmittedIntrigues handleOpenModalDisplay={handleOpenModalDisplay}/>;\r\n         break;\r\n      default:\r\n         displayData = <SubmittedNames handleOpenModalDisplay={handleOpenModalDisplay}/>;\r\n   }\r\n\r\n   if(!isFetching){\r\n      return(\r\n         <Wrapper>\r\n            <div className=\"titleContainer\">\r\n               <h1>Your Submissions</h1>\r\n            </div>\r\n            <div className=\"tabContainer\">\r\n               <Link className={category === 'firstnames' ? 'active' : 'notactive'} to=\"/submissions/firstnames\">First Names</Link>\r\n               <Link className={category === 'lastnames' ? 'active' : 'notactive'} to=\"/submissions/lastnames\">Last Names</Link>\r\n               <Link className={category === 'images' ? 'active' : 'notactive'} to=\"/submissions/images\">Images</Link>\r\n               <Link className={category === 'roleplay' ? 'active' : 'notactive'} to=\"/submissions/roleplay\">Roleplay</Link>\r\n               <Link className={category === 'intrigue' ? 'active' : 'notactive'} to=\"/submissions/intrigue\">Intrigue</Link>\r\n            </div>\r\n   \r\n            <div className=\"listContainer\">\r\n               {(modalDisplay)\r\n                  ? <EditEntryModal modalData={modalData} setModalDisplay={setModalDisplay}/>\r\n                  : <React.Fragment/>\r\n               }\r\n               {displayData}\r\n            </div>\r\n\r\n   \r\n         </Wrapper>\r\n      )\r\n   }\r\n   else {\r\n      return(\r\n         <Wrapper>\r\n            <LoadingIcon/>\r\n         </Wrapper>\r\n      )\r\n   }\r\n   \r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({ \r\n   userEmail: state.authenticate.authenticated.email,\r\n   isFetching: state.submissions.isFetching,\r\n});\r\n\r\nexport default connect(mapStateToProps, {getSubmissions})(Submissions);\r\n","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\pages\\Submit.js",["192"],"import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { Sidebar, InputCharDesc, InputCharImage, InputCharIntrigue, InputCharRoleplay } from '../components';\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   flex-direction:column;\r\n   color:#f3f3f3;\r\n\r\n   & .titleContainer {\r\n      width:100%;\r\n      padding-left:20px;\r\n      margin-bottom:10px;\r\n      color:#01a4f6;\r\n      font-size:1.5rem;\r\n   }\r\n\r\n   & .main {\r\n      background-color:${props => props.backgroundLgtColor};\r\n      color:${props => props.theme.fontColor};\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr 1fr 1fr;\r\n      grid-template-rows: 0.9fr 1.1fr;\r\n      gap: 10px 10px;\r\n      grid-template-areas:\r\n         \"desc desc image image\"\r\n         \"role role intrigue intrigue\";\r\n   }\r\n   \r\n`\r\nconst InputDesc = styled.div`\r\n   grid-area: desc;\r\n   overflow: hidden;\r\n   background-color:#2f3438;\r\n   border-radius:20px;\r\n\r\n`\r\nconst InputImage = styled.div`\r\n   grid-area: image;\r\n   overflow: hidden;\r\n   background-color:#2f3438;\r\n   border-radius:20px;\r\n`\r\nconst InputRoleplay = styled.div`\r\n   grid-area: role;\r\n   overflow: hidden;\r\n   background-color:#2f3438;\r\n   border-radius:20px;\r\n`\r\nconst InputIntrigue = styled.div`\r\n   grid-area: intrigue;\r\n   overflow: hidden;\r\n   background-color:#2f3438; \r\n   border-radius:20px;\r\n`\r\n\r\n\r\n\r\nconst Submit = () => {\r\n\r\n   return(\r\n      <Wrapper>\r\n         <div className=\"titleContainer\">\r\n            <h1>Add your own characters!</h1>\r\n         </div>\r\n\r\n         <div className=\"main\">\r\n            <InputImage>\r\n               <InputCharImage/>\r\n            </InputImage>\r\n\r\n            <InputDesc>\r\n               <InputCharDesc/>\r\n            </InputDesc>\r\n\r\n            <InputRoleplay>\r\n               <InputCharRoleplay/>\r\n            </InputRoleplay>\r\n\r\n            <InputIntrigue>\r\n               <InputCharIntrigue/>\r\n            </InputIntrigue>\r\n         </div>\r\n      </Wrapper>\r\n   )\r\n}\r\n\r\nexport default Submit;","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\pages\\Register.js",["193","194"],"import React, { useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../redux/actions/index\";\r\nimport Loader from 'react-loader-spinner';\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingIcon } from '../components';\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   justify-content:center;\r\n\r\n   & .registerForm {\r\n      padding:20px;\r\n      background-color:${props => props.theme.backgroundLgtColor};\r\n      color:${props => props.theme.fontColor};\r\n      align-self:center;\r\n      width:50%;\r\n      justify-content:center;\r\n      max-width:600px;\r\n      border-radius:5px;\r\n   }\r\n   & .registerFieldset {\r\n      display:flex;\r\n      flex-direction:column;\r\n      padding:10px;\r\n   }\r\n   & .buttonContainer {\r\n      margin: 10px auto 0;\r\n      width:100%;\r\n   }\r\n   & .registerInput {\r\n      padding:10px;\r\n      width:100%;\r\n      margin: 0 auto;\r\n   }\r\n`\r\n\r\nconst ErrorBox = styled.div`\r\n   width:100px;\r\n   height:100px;\r\n   background-color:red;   \r\n`\r\n\r\nconst Register = ({registerUser, isFetching}) => {\r\n   const [ userEmail, setUserEmail] = useState(false);\r\n   const [ userPassword, setUserPassword] = useState(false);\r\n   const [ userName, setUserName] = useState(false);\r\n\r\n   const handlePassword = (event) => {\r\n      setUserPassword(event.target.value)\r\n   }\r\n   const handleEmail = (event) => {\r\n      setUserEmail(event.target.value)\r\n   }\r\n   const handleUserName = (event) => {\r\n      setUserName(event.target.value)\r\n   }\r\n   if(isFetching === false){\r\n      return(\r\n         <Wrapper>\r\n            <form>\r\n               <fieldset>\r\n                  <legend>Register</legend>\r\n                  <input\r\n                     placeholder=\"User Name\"\r\n                     className=\"registerInput\"\r\n                     onChange={handleUserName} \r\n                     type=\"text\" name=\"user-name\"  id=\"user-name\" \r\n                  />\r\n                  <input\r\n                     placeholder=\"Email\"\r\n                     className=\"registerInput\"\r\n                     onChange={handleEmail} \r\n                     type=\"email\" name=\"email-address\"  id=\"email-address\" \r\n                  />\r\n                  <input \r\n                     placeholder=\"Password\"\r\n                     className=\"registerInput\"\r\n                     onChange={handlePassword} \r\n                     type=\"password\" name=\"password\"  id=\"password\" \r\n                  />\r\n                  <div className=\"buttonContainer\">\r\n                     <input \r\n                        className=\"registerInput\" \r\n                        type=\"submit\" \r\n                        value=\"Register\" \r\n                        onClick={()=> registerUser({userEmail, userPassword, userName})}\r\n                     />\r\n                  </div>\r\n\r\n                  <Link className=\"buttonContainer\" to=\"/signIn\"> \r\n                     <input\r\n                        type=\"submit\" \r\n                        value=\"Sign In\"\r\n                        className=\"registerInput\" \r\n                     />\r\n                  </Link>\r\n               </fieldset>\r\n            </form>\r\n         </Wrapper>\r\n      )   \r\n   }\r\n   else {\r\n      return(\r\n         <Wrapper>\r\n            <LoadingIcon/>\r\n         </Wrapper>\r\n      )\r\n   } \r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({ authenticated: state.authenticate.authenticated, isFetching: state.register.isFetching });\r\n\r\nexport default connect(mapStateToProps, { registerUser, })(Register);","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\registerUser.js",["195"],"import { REGISTER_USER, CLEAR_REGISTER_ERROR } from \"../actions/action-types\";\r\n\r\nconst initialState = {\r\n   isFetching: false,\r\n};\r\n\r\nfunction registerReducer(state = initialState, action) {\r\n   if (action.type === REGISTER_USER) {\r\n      return action.payload\r\n   }\r\n   return state;\r\n};\r\n\r\nexport default registerReducer;\r\n","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\authenticate.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\newCharacter.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharIntrigue.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\submissions.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharDesc.js",["196"],"import { SUBMIT_CHAR_DESC,CLEAR_INPUT_DESC_ERROR } from \"../actions/action-types\";\r\n\r\nconst initialState = {\r\n   isFetching: false,\r\n};\r\n\r\nfunction inputCharDescReducer(state = initialState, action) {\r\n   if (action.type === SUBMIT_CHAR_DESC) {\r\n      return action.payload\r\n   }\r\n   return state;\r\n};\r\n\r\nexport default inputCharDescReducer;\r\n","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharImage.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharRoleplay.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\constants\\index.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\actions\\index.js",["197","198","199","200","201","202","203","204"],"import { \r\n   SUBMIT_CHAR_ROLEPLAY, \r\n   SUBMIT_CHAR_INTRIGUE, \r\n   SUBMIT_CHAR_IMAGE, \r\n   SUBMIT_CHAR_DESC, \r\n   GET_SUBMISSIONS, \r\n   NEW_CHAR, \r\n   SIGN_IN, \r\n   SIGN_OUT,\r\n   REGISTER_USER, \r\n} from \"./action-types\";\r\nimport axios from 'axios';\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nexport const submitCharDesc = (\r\n   selectedRace, \r\n   selectedGender,\r\n   inputFName,\r\n   inputLName,\r\n   userEmail,\r\n   userID,) => async (dispatch) => {\r\n\r\n   dispatch({\r\n      type: SUBMIT_CHAR_DESC,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"race\": selectedRace,\r\n      \"gender\": selectedGender,\r\n      \"name\":inputFName,\r\n      \"lastname\":inputLName,\r\n      \"email\":userEmail,\r\n      \"id\":userID\r\n   })\r\n   const inputCharDescAPI = await axios.post('https://safe-dawn-37731.herokuapp.com/addname', json, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n   })\r\n   dispatch({\r\n      type: SUBMIT_CHAR_DESC,\r\n      payload:{\r\n         isFetching: false,\r\n      },\r\n   })\r\n}\r\n\r\n\r\n\r\n\r\nexport const submitCharImage = (\r\n   previewSRC,\r\n   selectedGender,\r\n   selectedRace, \r\n   userEmail,\r\n   userID,) => async (dispatch) => {\r\n\r\n   dispatch({\r\n      type: SUBMIT_CHAR_IMAGE,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"race\": selectedRace,\r\n      \"gender\": selectedGender,\r\n      \"image\": previewSRC,\r\n      \"email\":userEmail,\r\n      \"id\":userID\r\n   })\r\n   const inputCharImageAPI = await axios.post('https://safe-dawn-37731.herokuapp.com/charimage', json, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n   })\r\n   dispatch({\r\n      type: SUBMIT_CHAR_IMAGE,\r\n      payload:{\r\n         isFetching: false,\r\n      },\r\n   })\r\n}\r\n\r\nexport const submitCharIntrigue = (\r\n   inputIntrigue, \r\n   userEmail,\r\n   userID,) => async (dispatch) => {\r\n\r\n   dispatch({\r\n      type: SUBMIT_CHAR_INTRIGUE,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"intrigue\": inputIntrigue,\r\n      \"email\":userEmail,\r\n      \"id\":userID\r\n   })\r\n   const inputCharIntrigueAPI = await axios.post('https://safe-dawn-37731.herokuapp.com/addintrigue', json, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n   })\r\n   dispatch({\r\n      type: SUBMIT_CHAR_INTRIGUE,\r\n      payload:{\r\n         isFetching: false,\r\n      },\r\n   })\r\n}\r\n\r\n\r\n\r\nexport const getSubmissions = (userEmail) => async (dispatch) => {\r\n   dispatch({\r\n      type: GET_SUBMISSIONS,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"email\": userEmail\r\n   })\r\n   const getSubmissionsResponse = await axios.post('https://safe-dawn-37731.herokuapp.com/getsubmissions', json, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n   })\r\n   console.log(getSubmissionsResponse)\r\n   dispatch({\r\n      type: GET_SUBMISSIONS,\r\n      payload:{\r\n         isFetching: false,\r\n         submittedFNames: [\r\n            getSubmissionsResponse.data[0],\r\n            getSubmissionsResponse.data[1],\r\n            getSubmissionsResponse.data[2],\r\n            getSubmissionsResponse.data[3],\r\n            getSubmissionsResponse.data[4],\r\n         ],\r\n         submittedLNames: [\r\n            getSubmissionsResponse.data[10],\r\n            getSubmissionsResponse.data[11],\r\n            getSubmissionsResponse.data[12],\r\n            getSubmissionsResponse.data[13],\r\n            getSubmissionsResponse.data[14],\r\n         ],\r\n         submittedImages: [\r\n            getSubmissionsResponse.data[5],\r\n            getSubmissionsResponse.data[6],\r\n            getSubmissionsResponse.data[7],\r\n            getSubmissionsResponse.data[8],\r\n            getSubmissionsResponse.data[9],\r\n         ],\r\n         submittedRoleplays: getSubmissionsResponse.data[15],\r\n         submittedIntrigues: getSubmissionsResponse.data[16],\r\n      },\r\n   })\r\n   return true;\r\n}\r\n\r\nexport const editUserSubmission = ( entryType, editedUserSub, email, entryValue ) => async (dispatch) => {\r\n   dispatch({\r\n      type: SUBMIT_CHAR_INTRIGUE,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"entryType\": entryType,\r\n      \"entryData\": editedUserSub,\r\n      \"userEmail\": email,\r\n      \"originalSub\": entryValue\r\n   })\r\n   const getSubmissionsResponse = await axios.post('https://safe-dawn-37731.herokuapp.com/edit', json, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n   })\r\n   .then(res => {\r\n      dispatch({\r\n         type: SUBMIT_CHAR_INTRIGUE,\r\n         payload:{\r\n            isFetching: false,\r\n         },\r\n      })\r\n   })\r\n   .catch(error => {\r\n      dispatch({\r\n         type: SUBMIT_CHAR_INTRIGUE,\r\n         payload:{\r\n            isFetching: false,\r\n            error:true,\r\n         },\r\n      })\r\n   });\r\n}\r\n\r\nexport const deleteUserSubmission = ( intrigue, email, id ) => async (dispatch) => {\r\n   dispatch({\r\n      type: SUBMIT_CHAR_INTRIGUE,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"entryType\": intrigue,\r\n      \"userEmail\": email,\r\n      \"originalSub\": id,\r\n   })\r\n   const getSubmissionsResponse = await axios.post('https://safe-dawn-37731.herokuapp.com/delete', json, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n   })\r\n   .then(res => {\r\n      dispatch({\r\n         type: SUBMIT_CHAR_INTRIGUE,\r\n         payload:{\r\n            isFetching: false,\r\n         },\r\n      })\r\n   })\r\n   .catch(error => {\r\n      dispatch({\r\n         type: SUBMIT_CHAR_INTRIGUE,\r\n         payload:{\r\n            isFetching: false,\r\n            error:true,\r\n         },\r\n      })\r\n   });\r\n}\r\n\r\n\r\n\r\nexport const submitCharRoleplay = ( roleplay, email, id ) => async (dispatch) => { \r\n   dispatch({\r\n      type: SUBMIT_CHAR_ROLEPLAY,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"roleplay\": roleplay,\r\n      \"email\": email,\r\n      \"id\": id,\r\n   })\r\n   const getSubmissionsResponse = await axios.post('https://safe-dawn-37731.herokuapp.com/addroleplay', json, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n   })\r\n   .then(res => {\r\n      dispatch({\r\n         type: SUBMIT_CHAR_ROLEPLAY,\r\n         payload:{\r\n            isFetching: false,\r\n         },\r\n      })\r\n   })\r\n   .catch(error => {\r\n      dispatch({\r\n         type: SUBMIT_CHAR_ROLEPLAY,\r\n         payload:{\r\n            isFetching: false,\r\n            error:true,\r\n         },\r\n      })\r\n   });\r\n}\r\n\r\nexport const generateCharacter = ({gender, race}) => async (dispatch) => {\r\n   dispatch({\r\n      type: NEW_CHAR,\r\n      payload:{\r\n         isFetching: true,\r\n         newChar: {},\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"race\": race,\r\n      \"gender\": gender\r\n   })\r\n   const genCharResponse = await axios.post('https://safe-dawn-37731.herokuapp.com/genchar', json, {\r\n      headers: { 'Content-Type': 'application/json' }\r\n   });\r\n   dispatch({\r\n      type: NEW_CHAR,\r\n      payload:{\r\n         isFetching: false,\r\n         newChar: genCharResponse,\r\n      },\r\n   })\r\n}\r\n\r\nexport const signOut = () => async (dispatch) => {\r\n   dispatch({\r\n      type: SIGN_OUT,\r\n   })\r\n}\r\n\r\nexport const signIn = ({userEmail, userPassword}) => async (dispatch) => {\r\n   dispatch({\r\n      type: SIGN_IN,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"email\": userEmail,\r\n      \"password\": userPassword\r\n   })\r\n   const authenticated = await axios.post('https://safe-dawn-37731.herokuapp.com/signin', json, {\r\n      headers: { 'Content-Type': 'application/json' }\r\n   })\r\n\r\n   .then(data => {\r\n      console.log(data)\r\n      dispatch({\r\n         type: SIGN_IN,\r\n         payload:{\r\n            isFetching: false,\r\n            authenticated: data.data,\r\n         },\r\n      })\r\n   })\r\n   .catch(error => {\r\n      toast.dismiss();\r\n      toast.error('Incorrect email address or password.');\r\n      dispatch({\r\n         type: SIGN_IN,\r\n         payload:{\r\n            isFetching: false,\r\n            authenticated: false,\r\n         },\r\n      })\r\n   });\r\n}\r\n\r\nexport const registerUser = ({userEmail, userPassword, userName}) => async (dispatch) => {\r\n   dispatch({\r\n      type: REGISTER_USER,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"email\": userEmail,\r\n      \"password\": userPassword,\r\n      \"name\" : userName\r\n   })\r\n   const authenticated = await axios.post('https://safe-dawn-37731.herokuapp.com/register', json, {\r\n      headers: { 'Content-Type': 'application/json' }\r\n   })\r\n   .then(data => {\r\n      dispatch({\r\n         type: REGISTER_USER,\r\n         payload:{\r\n            isFetching: false,\r\n         },\r\n      })\r\n      dispatch({\r\n         type: SIGN_IN,\r\n         payload:{\r\n            authenticated: true,\r\n         },\r\n      })\r\n   })\r\n   .catch(error => {\r\n      toast.dismiss();\r\n      toast.error('Incorrect email address or password.');\r\n      dispatch({\r\n         type: REGISTER_USER,\r\n         payload:{\r\n            isFetching: false,\r\n         },\r\n      })\r\n   });\r\n}","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\redux\\actions\\action-types.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\index.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\Sidebar.js",["205","206","207","208","209"],"import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../redux/actions/index\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport loginIcon from \"../img/login.png\";\r\nimport logoutIcon from \"../img/logout.png\";\r\nimport submitIcon from \"../img/submit.png\";\r\nimport submissionsIcon from \"../img/submissions.png\";\r\nimport homeIcon from \"../img/home.png\";\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst Wrapper = styled.div`\r\n   width:8%;\r\n   min-width:60px;\r\n   max-width:80px;\r\n   max-height:100%;\r\n   display:flex;\r\n   flex-direction:column;\r\n   background-color:#2f3438;\r\n   color:${props => props.theme.fontColor};\r\n   padding:10px 0 10px 0;\r\n   border-radius:0 10px 10px 0;\r\n\r\n   & .navBarContainer {\r\n      width:100%;\r\n      height:100%;\r\n      \r\n   }\r\n   & .navList {\r\n      list-style-type:none;\r\n      text-align: center;\r\n      display: flex;\r\n      flex-direction:column;\r\n      width:100%;\r\n      height:100%;\r\n\r\n      * {\r\n         margin-bottom:10px;\r\n         padding:10px;\r\n         transition: all 0.2s ease-out;\r\n         &:visited{\r\n            text-decoration: none;\r\n         }\r\n         \r\n\r\n      }\r\n      & a:hover {\r\n         background-color:#FB677B;\r\n      }\r\n      & .active {\r\n         background-color:#FF3E58;\r\n      }\r\n\r\n      & :nth-child(4) {\r\n         /* display:flex; */\r\n         margin-top:auto;\r\n         \r\n      }\r\n      & img {\r\n         width:100%;\r\n         max-width: 60px;\r\n         margin: auto 0 ;\r\n         cursor: pointer;\r\n      }\r\n   }\r\n`\r\n\r\n\r\nconst Sidebar = ({ page, signOut, authenticated }) => {\r\n\r\n   const handleSignOut = () => {\r\n      signOut();\r\n   }\r\n   \r\n   return(\r\n      <Wrapper>\r\n         <ReactTooltip />\r\n         <nav className=\"navBarContainer\">\r\n            <ul className=\"navList\">\r\n               \r\n               <Link data-tip=\"Character Generator\" className={page === 'generator' ? 'active' : 'notactive'} to=\"/generator\"><img src={homeIcon}/></Link>\r\n               \r\n               <Link data-tip=\"Your Submissions\" className={page === 'submissions' ? 'active' : 'notactive'} to=\"/submissions/firstnames\"><img src={submissionsIcon}/></Link>\r\n\r\n               <Link data-tip=\"Add your own submissions!\" className={page === 'submit' ? 'active' : 'notactive'} to=\"/submit\"><img src={submitIcon}/></Link>\r\n               {authenticated \r\n                  ? <div data-tip=\"Sign Out\" onClick={()=>handleSignOut()}><img src={logoutIcon}/></div>\r\n                  : <Link data-tip=\"Sign In\" to=\"/signin\"><img src={loginIcon}/></Link>\r\n               }\r\n            </ul>\r\n         </nav>\r\n      </Wrapper>\r\n   )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({ authenticated: state.authenticate.authenticated });\r\nexport default connect(mapStateToProps, { signOut })(Sidebar);","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\Footer.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\Header.js",["210","211"],"import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Sidebar} from './index';\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   flex-direction:row;\r\n   flex-wrap:wrap;\r\n   background-color:${props => props.theme.backgroundHvyColor};\r\n   color:${props => props.theme.fontColor};\r\n\r\n   & .headtext{\r\n      margin: 0 auto;\r\n   }\r\n`\r\n\r\nconst Header = () => {\r\n   return(\r\n      <Wrapper >\r\n         \r\n         <h1 className=\"headtext\">The Community NPC Generator</h1>\r\n      \r\n      </Wrapper>\r\n   )\r\n} \r\n\r\nexport default Header;","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\CharImage.js",["212","213"],"import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport imageBG from \"../img/bg.png\";\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   flex-direction:row;\r\n   flex-wrap:wrap;\r\n   justify-content:center;\r\n   align-content:center;\r\n\r\n`\r\n\r\nconst CharImage = ({ newCharImage }) => {\r\n   \r\n   return(\r\n      <Wrapper>\r\n         <img src={newCharImage}/>\r\n      </Wrapper>\r\n   )\r\n}\r\nconst mapStateToProps = (state) => ({ newCharImage: state.newChar.newChar.data[0][0].url });\r\nexport default connect(mapStateToProps)(CharImage);","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\CharRoleplay.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharImage.js",["214"],"import React, { useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport {submitCharImage } from \"../redux/actions/index\";\r\nimport {optionsRace, optionsGender} from \"../constants/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadingIcon } from '.';\r\n\r\nimport Select from 'react-select';\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   flex-direction:row;\r\n   flex-wrap:wrap;\r\n   justify-content:center;\r\n   border-radius:5px;\r\n   align-content:center;\r\n   padding:30px;\r\n\r\n   & h2 {\r\n      color:#01a4f6;\r\n   }\r\n   & form {\r\n      display:flex;\r\n      flex-direction:column;\r\n      width:100%;\r\n      height:100%;\r\n      justify-content:center;\r\n   }\r\n   & .input {\r\n      padding:10px;\r\n      width:100%;\r\n      margin: 0 auto;\r\n      /* background-color:red; */\r\n      border-radius:5px;\r\n      margin-bottom:10px;\r\n      outline: none;\r\n      border:0px;\r\n   }\r\n   & .hiddenBrowse {\r\n      display:none;\r\n   }\r\n\r\n   & .button {\r\n      background-color: #FF3E58;\r\n      border:0;\r\n      width:30%;\r\n      height:39px;\r\n      border-radius:5px;\r\n      color:white;\r\n      transition: all 0.2s ease-out;\r\n      cursor: pointer;\r\n      \r\n      &:hover {\r\n         background-color:#FB677B;\r\n      }\r\n   }\r\n`\r\n\r\nconst ErrorBox = styled.div`\r\n   width:100px;\r\n   height:100px;\r\n   background-color:red;   \r\n`\r\n\r\n\r\nconst InputCharImage = ({ isFetching,  submitCharImage, userID, userEmail }) => {\r\n   const [ selectedGender, setSelectedGender] = useState('random');\r\n   const [ selectedRace, setSelectedRace] = useState('random');\r\n   const [ previewSRC, setPreviewSRC] = useState('');\r\n\r\n   const handleGender = (event) => {\r\n      setSelectedGender(event.value)\r\n   }\r\n   const handleRace = (event) => {\r\n      setSelectedRace(event.value)\r\n   }\r\n\r\n   const handleSubmit = () => {\r\n      \r\n      submitCharImage(\r\n         previewSRC,\r\n         selectedGender,\r\n         selectedRace, \r\n         userEmail,\r\n         userID,\r\n      )\r\n   }\r\n\r\n   const handlePreview = (data) => {\r\n      console.log(data)\r\n      data.preventDefault();\r\n      let file = data.target.files[0];\r\n      let reader = new FileReader();\r\n      if (data.target.files.length === 0) {\r\n        return;\r\n      }\r\n      reader.onloadend = (data) => {\r\n         setPreviewSRC([reader.result])\r\n      }\r\n      reader.readAsDataURL(file);\r\n   }\r\n\r\n   if(isFetching){\r\n      return(\r\n         <Wrapper>\r\n            <LoadingIcon/>\r\n         </Wrapper>\r\n      )\r\n   }\r\n   else {\r\n      return(\r\n         <Wrapper >\r\n            <h2>Character Image</h2>\r\n            <form>\r\n               <Select  \r\n                  className=\"selectContainer\"\r\n                  defaultValue={optionsGender[0]}\r\n                  onChange={handleGender}\r\n                  isSearchable={false}\r\n                  options={optionsGender}\r\n               />\r\n               <Select  \r\n                  className=\"selectContainer\"\r\n                  defaultValue={optionsRace[0]}\r\n                  onChange={handleRace}\r\n                  isSearchable={false}\r\n                  options={optionsRace}\r\n               />\r\n   \r\n               <input\r\n                  type=\"file\"\r\n                  accept=\"image/png, image/jpeg\"\r\n                  id=\"file\"\r\n                  onChange={handlePreview} \r\n                  className=\"hiddenBrowse\"\r\n               />\r\n               <label className=\"button\" htmlFor=\"file\">Browse</label>\r\n               \r\n               <button\r\n                  type={\"button\"}\r\n                  onClick={()=> handleSubmit()}\r\n                  className=\"button\"\r\n               >\r\n                  Submit\r\n               </button>\r\n   \r\n   \r\n            </form>\r\n            <img src={previewSRC} alt=\"\"/>\r\n         </Wrapper>\r\n      )\r\n   }\r\n   \r\n} \r\n\r\n\r\nconst mapStateToProps = (state) => (\r\n   {  \r\n      isFetching:state.inputCharImage.isFetching, \r\n      userID: state.authenticate.authenticated.id,\r\n      userEmail: state.authenticate.authenticated.email  \r\n   }\r\n);\r\n\r\nexport default connect(mapStateToProps, {  submitCharImage })(InputCharImage);","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharIntrigue.js",["215"],"import React, { useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { submitCharIntrigue } from \"../redux/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadingIcon } from '.';\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   flex-direction:row;\r\n   flex-wrap:wrap;\r\n   justify-content:center;\r\n   border-radius:5px;\r\n   align-content:center;\r\n   padding:30px;\r\n\r\n   & h2 {\r\n      color:#01a4f6;\r\n   }\r\n   & form {\r\n      display:flex;\r\n      flex-direction:column;\r\n      width:100%;\r\n      height:100%;\r\n      justify-content:center;\r\n   }\r\n   & .input {\r\n      padding:10px;\r\n      width:100%;\r\n      margin: 0 auto;\r\n      /* background-color:red; */\r\n      border-radius:5px;\r\n      margin-bottom:10px;\r\n      outline: none;\r\n      border:0px;\r\n   }\r\n\r\n   & button {\r\n      background-color: #FF3E58;\r\n      border:0;\r\n      width:30%;\r\n      height:39px;\r\n      border-radius:5px;\r\n      color:white;\r\n      transition: all 0.2s ease-out;\r\n      cursor: pointer;\r\n      \r\n      &:hover {\r\n         background-color:#FB677B;\r\n      }\r\n   }\r\n`\r\nconst ErrorBox = styled.div`\r\n   width:100px;\r\n   height:100px;\r\n   background-color:red;   \r\n`\r\n\r\n\r\nconst InputCharIntrigue = ({isFetching, userEmail, userID, submitCharIntrigue}) => {\r\n   const [ inputIntrigue, setinputIntrigue] = useState(false);\r\n\r\n   const handleIntrigue = (event) =>{\r\n      let str = event.target.value.split('.').join(\"\").trim();\r\n      setinputIntrigue(str);\r\n   }\r\n   const handleSubmit = () => {\r\n      submitCharIntrigue(\r\n         inputIntrigue,\r\n         userEmail,\r\n         userID,\r\n      )\r\n   }\r\n   if(isFetching){\r\n      return(\r\n         <Wrapper>\r\n            <LoadingIcon/>\r\n         </Wrapper>\r\n      )\r\n   }\r\n   else {\r\n      return(\r\n         <Wrapper >\r\n            <h2>Character Intrigue</h2>\r\n            <form onSubmit={()=>handleSubmit()}>\r\n               <textarea \r\n                  placeholder=\"Character Intrigue\" \r\n                  onChange={handleIntrigue} \r\n                  type=\"text\" \r\n                  required=\"required\"\r\n                  minLength=\"3\"\r\n                  maxLength=\"80\"\r\n                  className=\"input\"\r\n               />\r\n               <button type={\"submit\"}>Submit</button>\r\n            </form>\r\n         </Wrapper>\r\n      )\r\n   }\r\n} \r\n\r\n\r\nconst mapStateToProps = (state) => ({  \r\n   isFetching:state.inputCharIntrigue.isFetching, \r\n   userID: state.authenticate.authenticated.id,\r\n   userEmail: state.authenticate.authenticated.email\r\n});\r\n\r\nexport default connect(mapStateToProps, { submitCharIntrigue })(InputCharIntrigue);","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharRoleplay.js",["216"],"import React, { useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { submitCharRoleplay } from \"../redux/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadingIcon } from '.';\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   flex-direction:row;\r\n   flex-wrap:wrap;\r\n   justify-content:center;\r\n   border-radius:5px;\r\n   padding:30px;\r\n\r\n   & h2 {\r\n      color:#01a4f6;\r\n   }\r\n   & form {\r\n      display:flex;\r\n      flex-direction:column;\r\n      width:100%;\r\n      height:100%;\r\n      justify-content:center;\r\n   }\r\n\r\n   & .input {\r\n      padding:10px;\r\n      width:100%;\r\n      margin: 0 auto;\r\n      /* background-color:red; */\r\n      border-radius:5px;\r\n      margin-bottom:10px;\r\n      outline: none;\r\n      border:0px;\r\n   }\r\n\r\n   & button {\r\n      background-color: #FF3E58;\r\n      border:0;\r\n      width:30%;\r\n      height:39px;\r\n      border-radius:5px;\r\n      color:white;\r\n      transition: all 0.2s ease-out;\r\n      cursor: pointer;\r\n      \r\n      &:hover {\r\n         background-color:#FB677B;\r\n      }\r\n   }\r\n`\r\nconst ErrorBox = styled.div`\r\n   width:100px;\r\n   height:100px;\r\n   background-color:red;   \r\n`\r\n\r\nconst InputCharRoleplay = ({isFetching, submitCharRoleplay, userEmail, userID }) => {\r\n   const [ inputRoleplay, setinputRoleplay] = useState(false);\r\n\r\n   const handleRoleplay = (event) =>{\r\n      let str = event.target.value.split('.').join(\"\").trim();\r\n      setinputRoleplay(str);\r\n   }\r\n   const handleSubmit = () => {\r\n      submitCharRoleplay(\r\n         inputRoleplay,\r\n         userEmail,\r\n         userID,\r\n      )\r\n   }\r\n\r\n   if(isFetching){\r\n      return(\r\n         <Wrapper>\r\n            <LoadingIcon/>\r\n         </Wrapper>\r\n      )\r\n   }\r\n   else {\r\n      return(\r\n         <Wrapper >\r\n            <h2>Character Roleplay Cues</h2>\r\n            <form onSubmit={()=>handleSubmit()}>\r\n               <textarea \r\n                  placeholder=\"Roleplay Cues:\" \r\n                  onChange={handleRoleplay} \r\n                  type=\"text\" \r\n                  required=\"required\"\r\n                  minLength=\"3\"\r\n                  maxLength=\"80\"\r\n                  className=\"input\"\r\n               />\r\n               <button type={\"submit\"}>Submit</button>\r\n            </form>\r\n         </Wrapper>\r\n      )\r\n   }\r\n\r\n} \r\n\r\n\r\nconst mapStateToProps = (state) => ({  \r\n   isFetching:state.inputCharRoleplay.isFetching, \r\n   userID: state.authenticate.authenticated.id,\r\n   userEmail: state.authenticate.authenticated.email\r\n});\r\n\r\nexport default connect(mapStateToProps, { submitCharRoleplay })(InputCharRoleplay);","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\LoadingIcon.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedNames.js",["217"],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharDesc.js",["218"],"import React, { useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { submitCharDesc } from \"../redux/actions/index\";\r\nimport {optionsRace, optionsGender} from \"../constants/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadingIcon } from '.';\r\n\r\nimport Select from 'react-select';\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   flex-direction:row;\r\n   flex-wrap:wrap;\r\n   justify-content:center;\r\n   border-radius:5px;\r\n   align-content:center;\r\n   padding:30px;\r\n\r\n   & h2 {\r\n      color:#01a4f6;\r\n   }\r\n   & form {\r\n      display:flex;\r\n      flex-direction:column;\r\n      width:100%;\r\n      height:100%;\r\n      justify-content:center;\r\n   }\r\n   & .input {\r\n      padding:10px;\r\n      width:100%;\r\n      margin: 0 auto;\r\n      /* background-color:red; */\r\n      border-radius:5px;\r\n      margin-bottom:10px;\r\n      outline: none;\r\n      border:0px;\r\n   }\r\n\r\n   & button {\r\n      background-color: #FF3E58;\r\n      border:0;\r\n      width:30%;\r\n      height:39px;\r\n      border-radius:5px;\r\n      color:white;\r\n      transition: all 0.2s ease-out;\r\n      cursor: pointer;\r\n      \r\n      &:hover {\r\n         background-color:#FB677B;\r\n      }\r\n   }\r\n   \r\n`\r\n\r\nconst ErrorBox = styled.div`\r\n   width:100px;\r\n   height:100px;\r\n   background-color:red;   \r\n`\r\n\r\n\r\nconst InputCharDesc = ({ isFetching, submitCharDesc, userID, userEmail}) => {\r\n   const [ selectedGender, setSelectedGender] = useState('random');\r\n   const [ selectedRace, setSelectedRace] = useState('random');\r\n   const [ inputFName, setinputFName] = useState('random');\r\n   const [ inputLName, setinputLName] = useState('random');\r\n\r\n   const handleGender = (event) => {\r\n      setSelectedGender(event.value)\r\n   }\r\n   const handleRace = (event) => {\r\n      setSelectedRace(event.value)\r\n   }\r\n   const handleFName = (event) => {\r\n      setinputFName(event.target.value.split('.').join(\"\").trim())\r\n   }\r\n   const handleLName = (event) => {\r\n      setinputLName(event.target.value.split('.').join(\"\").trim())\r\n   }\r\n   const handleSubmit = () => {\r\n      submitCharDesc(\r\n         selectedRace, \r\n         selectedGender,\r\n         inputFName,\r\n         inputLName,\r\n         userEmail,\r\n         userID,\r\n      )\r\n   }\r\n   if(isFetching){\r\n      return(\r\n         <Wrapper>\r\n            <LoadingIcon/>\r\n         </Wrapper>\r\n      )\r\n   }\r\n   else {\r\n      return(\r\n         <Wrapper >\r\n            <h2>Character Names</h2>\r\n            <form>\r\n               <Select\r\n                  defaultValue={optionsRace[0]}\r\n                  options={optionsRace}\r\n                  onChange={handleRace}\r\n                  isSearchable={false}\r\n               />\r\n               <Select\r\n                  defaultValue={optionsGender[0]}\r\n                  options={optionsGender}\r\n                  onChange={handleGender}\r\n                  isSearchable={false}\r\n               />\r\n               <input\r\n                  className=\"input\"\r\n                  onChange={handleFName}\r\n                  minLength=\"3\"\r\n                  maxLength=\"20\"\r\n                  name=\"charFName\"\r\n                  placeholder=\"First Name\"\r\n               />\r\n               <input\r\n                  className=\"input\"\r\n                  onChange={handleLName}\r\n                  minLength=\"3\"\r\n                  maxLength=\"20\"\r\n                  name=\"charLName\"\r\n                  placeholder=\"Optional Last Name - Gender neutral\"\r\n               />\r\n               <button\r\n                  type={\"button\"}\r\n                  onClick={()=> handleSubmit()}\r\n               >Submit</button>\r\n            </form>\r\n         </Wrapper>\r\n      )\r\n   }\r\n} \r\n\r\n\r\nconst mapStateToProps = (state) => ({ \r\n   isFetching:state.inputCharDesc.isFetching, \r\n   userID:state.authenticate.authenticated.id, \r\n   userEmail:state.authenticate.authenticated.email });\r\n\r\nexport default connect(mapStateToProps, { submitCharDesc })(InputCharDesc);","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedLastNames.js",["219"],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedImages.js",["220"],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedRoleplays.js",["221","222"],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedIntrigues.js",["223"],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\EditEntryModal.js",["224","225","226"],"import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components'\r\nimport { connect } from \"react-redux\";\r\nimport { editUserSubmission } from '../redux/actions/index';\r\nimport closeIcon from \"../img/close.png\";\r\n\r\nconst Wrapper = styled.div`\r\n   position:absolute;\r\n   width:300px;\r\n   height:300px;\r\n   background-color:#2f3438;\r\n   left:30%;\r\n   top:20%;\r\n   display:flex;\r\n   flex-direction:column;\r\n   padding:50px 20px 20px 20px;\r\n   border-radius:10px;\r\n   box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23); \r\n\r\n   & h1 {\r\n      color:#01a4f6;\r\n      font-size:1.5rem;\r\n      margin-bottom:30px;\r\n   }\r\n   & textarea {\r\n      padding:10px;\r\n      width:100%;\r\n      margin: 0 auto;\r\n      /* background-color:red; */\r\n      border-radius:5px;\r\n      margin-bottom:10px;\r\n      outline: none;\r\n      border:0px;\r\n      margin-bottom:30px;\r\n   }\r\n   & img {\r\n      position: absolute;\r\n      top:0;\r\n      right:0;\r\n      transition: scale 0.2s ease-in-out;\r\n      width:35px;\r\n      cursor:pointer;\r\n\r\n      &:hover {\r\n         scale:0.9;\r\n      }\r\n   }\r\n   & .submitButton {\r\n      background-color: #FF3E58;\r\n      border:0;\r\n      width:30%;\r\n      height:39px;\r\n      border-radius:5px;\r\n      color:white;\r\n      transition: all 0.2s ease-out;\r\n      cursor: pointer;\r\n      \r\n      &:hover {\r\n         background-color:#FB677B;\r\n      }\r\n   }\r\n   & p {\r\n      width:100%;\r\n      font-size:1rem;\r\n      position:absolute;\r\n      bottom:0;\r\n      left:10px;\r\n      padding:10px;\r\n   }\r\n   & .accepted {\r\n      color:green;\r\n   }\r\n   & .pending {\r\n      color:blue;\r\n   }\r\n   & .failed {\r\n      color:red;\r\n   }\r\n`\r\nconst EditEntryModal = ({modalData, setModalDisplay, editUserSubmission}) => {\r\n   console.log(modalData)\r\n   const [entryType, setEntryType] = useState('');\r\n   const [originalEntry, setOriginalEntry] = useState('');\r\n   const [editedUserSub, setEditedUserSub] = useState(false);\r\n\r\n   useEffect(()=>{\r\n      if('name' in modalData){\r\n         setEntryType('name')\r\n         setOriginalEntry(modalData.name)\r\n      }\r\n      else if('lastname' in modalData){\r\n         setEntryType('lastname')\r\n         setOriginalEntry(modalData.lastname)\r\n      }\r\n      else if('roleplay' in modalData){\r\n         setEntryType('roleplay')\r\n         setOriginalEntry(modalData.roleplay)\r\n      }\r\n      else if('intrigue' in modalData){\r\n         setEntryType('intrigue')\r\n         setOriginalEntry(modalData.intrigue)\r\n      }\r\n   },[])\r\n   \r\n\r\n   const handleSubmit = (editUserSubmission) => {\r\n      // this.state.\r\n      if(!editedUserSub){\r\n         console.log('Edit first')\r\n      } else {\r\n         editUserSubmission(entryType,)\r\n      }\r\n   }\r\n\r\n   let moderationStatus = false;\r\n   if(modalData.moderation){\r\n      moderationStatus = 'Moderation Status: Accepted'\r\n   }\r\n   else if(modalData.moderation === null){\r\n      moderationStatus = 'Moderation Status: Pending'\r\n   } else if(modalData.moderation === false){\r\n      moderationStatus = 'Moderation Status: Failed'\r\n   }\r\n\r\n   return (\r\n      <Wrapper>\r\n         \r\n         <img onClick={()=>setModalDisplay(false)} src={closeIcon}></img>\r\n         <h1>Edit your submission.</h1>\r\n         {(modalData.race)\r\n            ? modalData.race\r\n            : <React.Fragment/>\r\n         }\r\n         {(modalData.gender)\r\n            ? (modalData.gender)\r\n               ? 'Male'\r\n               : 'Female'\r\n            : <React.Fragment/>\r\n         }\r\n         <p className={(modalData.moderation) ? 'accepted' : (modalData.moderation === null) ? 'pending' : 'failed' }>Moderation Status: {(modalData.moderation) ? 'Accepted' : (modalData.moderation === null) ? 'Pending' : 'Failed' }</p>\r\n\r\n\r\n         {/* Edit stuff */}\r\n         <textarea className=\"editModalTextArea\" onChange={(e)=>setEditedUserSub(e.target.value)} defaultValue={originalEntry} minlenth=\"3\" maxLength=\"80\"></textarea>\r\n\r\n         {/* Submit Edit */}\r\n         <button className=\"submitButton\" onClick={()=>handleSubmit()}>Submit</button>\r\n      </Wrapper>\r\n   )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({ \r\n   submittedFNames:state.submissions.submittedFNames,\r\n});\r\n\r\nexport default connect(mapStateToProps, {editUserSubmission})(EditEntryModal);","C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\CharIntrigue.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\components\\CharDesc.js",[],"C:\\Users\\sirfl\\Desktop\\new-portfolio\\The-Community-NPC-Generator-Front-End\\src\\pages\\index.js",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":9,"column":3,"nodeType":"233","messageId":"234","endLine":9,"endColumn":11},{"ruleId":"231","severity":1,"message":"235","line":14,"column":10,"nodeType":"233","messageId":"234","endLine":14,"endColumn":16},{"ruleId":"231","severity":1,"message":"236","line":14,"column":18,"nodeType":"233","messageId":"234","endLine":14,"endColumn":24},{"ruleId":"231","severity":1,"message":"237","line":4,"column":72,"nodeType":"233","messageId":"234","endLine":4,"endColumn":79},{"ruleId":"238","severity":1,"message":"239","line":111,"column":6,"nodeType":"240","endLine":111,"endColumn":8,"suggestions":"241"},{"ruleId":"231","severity":1,"message":"232","line":14,"column":16,"nodeType":"233","messageId":"234","endLine":14,"endColumn":24},{"ruleId":"238","severity":1,"message":"242","line":85,"column":6,"nodeType":"240","endLine":85,"endColumn":17,"suggestions":"243"},{"ruleId":"238","severity":1,"message":"244","line":89,"column":6,"nodeType":"240","endLine":89,"endColumn":8,"suggestions":"245"},{"ruleId":"231","severity":1,"message":"237","line":3,"column":10,"nodeType":"233","messageId":"234","endLine":3,"endColumn":17},{"ruleId":"231","severity":1,"message":"246","line":5,"column":8,"nodeType":"233","messageId":"234","endLine":5,"endColumn":14},{"ruleId":"231","severity":1,"message":"247","line":41,"column":7,"nodeType":"233","messageId":"234","endLine":41,"endColumn":15},{"ruleId":"231","severity":1,"message":"248","line":1,"column":25,"nodeType":"233","messageId":"234","endLine":1,"endColumn":45},{"ruleId":"231","severity":1,"message":"249","line":1,"column":27,"nodeType":"233","messageId":"234","endLine":1,"endColumn":49},{"ruleId":"231","severity":1,"message":"250","line":38,"column":10,"nodeType":"233","messageId":"234","endLine":38,"endColumn":26},{"ruleId":"231","severity":1,"message":"251","line":74,"column":10,"nodeType":"233","messageId":"234","endLine":74,"endColumn":27},{"ruleId":"231","severity":1,"message":"252","line":103,"column":10,"nodeType":"233","messageId":"234","endLine":103,"endColumn":30},{"ruleId":"231","severity":1,"message":"253","line":179,"column":10,"nodeType":"233","messageId":"234","endLine":179,"endColumn":32},{"ruleId":"231","severity":1,"message":"253","line":215,"column":10,"nodeType":"233","messageId":"234","endLine":215,"endColumn":32},{"ruleId":"231","severity":1,"message":"253","line":253,"column":10,"nodeType":"233","messageId":"234","endLine":253,"endColumn":32},{"ruleId":"231","severity":1,"message":"254","line":318,"column":10,"nodeType":"233","messageId":"234","endLine":318,"endColumn":23},{"ruleId":"231","severity":1,"message":"254","line":357,"column":10,"nodeType":"233","messageId":"234","endLine":357,"endColumn":23},{"ruleId":"255","severity":1,"message":"256","line":82,"column":127,"nodeType":"257","endLine":82,"endColumn":148},{"ruleId":"255","severity":1,"message":"256","line":84,"column":139,"nodeType":"257","endLine":84,"endColumn":167},{"ruleId":"255","severity":1,"message":"256","line":86,"column":127,"nodeType":"257","endLine":86,"endColumn":150},{"ruleId":"255","severity":1,"message":"256","line":88,"column":76,"nodeType":"257","endLine":88,"endColumn":99},{"ruleId":"255","severity":1,"message":"256","line":89,"column":59,"nodeType":"257","endLine":89,"endColumn":81},{"ruleId":"231","severity":1,"message":"258","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"231","severity":1,"message":"237","line":4,"column":10,"nodeType":"233","messageId":"234","endLine":4,"endColumn":17},{"ruleId":"231","severity":1,"message":"259","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":15},{"ruleId":"255","severity":1,"message":"256","line":21,"column":10,"nodeType":"257","endLine":21,"endColumn":35},{"ruleId":"231","severity":1,"message":"247","line":60,"column":7,"nodeType":"233","messageId":"234","endLine":60,"endColumn":15},{"ruleId":"231","severity":1,"message":"247","line":54,"column":7,"nodeType":"233","messageId":"234","endLine":54,"endColumn":15},{"ruleId":"231","severity":1,"message":"247","line":54,"column":7,"nodeType":"233","messageId":"234","endLine":54,"endColumn":15},{"ruleId":"238","severity":1,"message":"260","line":82,"column":7,"nodeType":"240","endLine":82,"endColumn":9,"suggestions":"261"},{"ruleId":"231","severity":1,"message":"247","line":58,"column":7,"nodeType":"233","messageId":"234","endLine":58,"endColumn":15},{"ruleId":"238","severity":1,"message":"262","line":79,"column":7,"nodeType":"240","endLine":79,"endColumn":9,"suggestions":"263"},{"ruleId":"238","severity":1,"message":"264","line":80,"column":7,"nodeType":"240","endLine":80,"endColumn":9,"suggestions":"265"},{"ruleId":"231","severity":1,"message":"266","line":46,"column":10,"nodeType":"233","messageId":"234","endLine":46,"endColumn":15},{"ruleId":"238","severity":1,"message":"267","line":70,"column":7,"nodeType":"240","endLine":70,"endColumn":9,"suggestions":"268"},{"ruleId":"238","severity":1,"message":"269","line":70,"column":7,"nodeType":"240","endLine":70,"endColumn":9,"suggestions":"270"},{"ruleId":"238","severity":1,"message":"271","line":103,"column":6,"nodeType":"240","endLine":103,"endColumn":8,"suggestions":"272"},{"ruleId":"231","severity":1,"message":"273","line":122,"column":7,"nodeType":"233","messageId":"234","endLine":122,"endColumn":23},{"ruleId":"255","severity":1,"message":"256","line":128,"column":10,"nodeType":"257","endLine":128,"endColumn":68},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'Header' is defined but never used.","'Sidebar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'generateCharacter' and 'newChar'. Either include them or remove the dependency array. If 'generateCharacter' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["276"],"React Hook useEffect has missing dependencies: 'category' and 'getSubmissions'. Either include them or remove the dependency array. If 'getSubmissions' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["277"],"React Hook useEffect has missing dependencies: 'getSubmissions' and 'userEmail'. Either include them or remove the dependency array. If 'getSubmissions' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["278"],"'Loader' is defined but never used.","'ErrorBox' is assigned a value but never used.","'CLEAR_REGISTER_ERROR' is defined but never used.","'CLEAR_INPUT_DESC_ERROR' is defined but never used.","'inputCharDescAPI' is assigned a value but never used.","'inputCharImageAPI' is assigned a value but never used.","'inputCharIntrigueAPI' is assigned a value but never used.","'getSubmissionsResponse' is assigned a value but never used.","'authenticated' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'imageBG' is defined but never used.","React Hook useEffect has missing dependencies: 'buildFNameElements' and 'submittedFNames'. Either include them or remove the dependency array.",["279"],"React Hook useEffect has missing dependencies: 'buildLNameElements' and 'submittedLNames'. Either include them or remove the dependency array.",["280"],"React Hook useEffect has missing dependencies: 'buildImageElements' and 'submittedImages'. Either include them or remove the dependency array.",["281"],"'races' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'buildRoleplayElements' and 'submittedRoleplays'. Either include them or remove the dependency array.",["282"],"React Hook useEffect has missing dependencies: 'buildIntrigueElements' and 'submittedIntrigues'. Either include them or remove the dependency array.",["283"],"React Hook useEffect has a missing dependency: 'modalData'. Either include it or remove the dependency array.",["284"],"'moderationStatus' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},"Update the dependencies array to be: [generateCharacter, newChar]",{"range":"303","text":"304"},"Update the dependencies array to be: [category, getSubmissions, userEmail]",{"range":"305","text":"306"},"Update the dependencies array to be: [getSubmissions, userEmail]",{"range":"307","text":"308"},"Update the dependencies array to be: [buildFNameElements, submittedFNames]",{"range":"309","text":"310"},"Update the dependencies array to be: [buildLNameElements, submittedLNames]",{"range":"311","text":"312"},"Update the dependencies array to be: [buildImageElements, submittedImages]",{"range":"313","text":"314"},"Update the dependencies array to be: [buildRoleplayElements, submittedRoleplays]",{"range":"315","text":"316"},"Update the dependencies array to be: [buildIntrigueElements, submittedIntrigues]",{"range":"317","text":"318"},"Update the dependencies array to be: [modalData]",{"range":"319","text":"320"},[2724,2726],"[generateCharacter, newChar]",[2001,2012],"[category, getSubmissions, userEmail]",[2076,2078],"[getSubmissions, userEmail]",[2349,2351],"[buildFNameElements, submittedFNames]",[2263,2265],"[buildLNameElements, submittedLNames]",[2276,2278],"[buildImageElements, submittedImages]",[1975,1977],"[buildRoleplayElements, submittedRoleplays]",[1951,1953],"[buildIntrigueElements, submittedIntrigues]",[2485,2487],"[modalData]"]
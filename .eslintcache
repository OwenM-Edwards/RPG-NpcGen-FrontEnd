[{"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\index.js":"1","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\store\\index.js":"2","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\App.js":"3","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\index.js":"4","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\pages\\Index.js":"5","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\Index.js":"6","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\submissions.js":"7","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\registerUser.js":"8","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharIntrigue.js":"9","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharImage.js":"10","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharDesc.js":"11","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharRoleplay.js":"12","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\newCharacter.js":"13","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\pages\\Submit.js":"14","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\pages\\Submissions.js":"15","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\Header.js":"16","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\CharImage.js":"17","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\CharRoleplay.js":"18","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\Sidebar.js":"19","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\Footer.js":"20","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\CharDesc.js":"21","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharIntrigue.js":"22","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\pages\\Generator.js":"23","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharDesc.js":"24","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharImage.js":"25","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\CharIntrigue.js":"26","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharRoleplay.js":"27","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\LoadingIcon.js":"28","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\authenticate.js":"29","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\pages\\SignIn.js":"30","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\pages\\Register.js":"31","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\actions\\action-types.js":"32","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\actions\\index.js":"33","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\constants\\index.js":"34","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedNames.js":"35","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedLastNames.js":"36","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedImages.js":"37","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedRoleplays.js":"38","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedIntrigues.js":"39","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\index.js":"40","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\EditEntryModal.js":"41"},{"size":305,"mtime":1618235407355,"results":"42","hashOfConfig":"43"},{"size":221,"mtime":1618161310685,"results":"44","hashOfConfig":"43"},{"size":2566,"mtime":1618670659551,"results":"45","hashOfConfig":"43"},{"size":641,"mtime":1618235628081,"results":"46","hashOfConfig":"43"},{"size":261,"mtime":1618161310681,"results":"47","hashOfConfig":"43"},{"size":1166,"mtime":1618328633857,"results":"48","hashOfConfig":"43"},{"size":461,"mtime":1618272422782,"results":"49","hashOfConfig":"43"},{"size":326,"mtime":1618162254901,"results":"50","hashOfConfig":"43"},{"size":472,"mtime":1618235628082,"results":"51","hashOfConfig":"43"},{"size":324,"mtime":1618236679353,"results":"52","hashOfConfig":"43"},{"size":343,"mtime":1618241185019,"results":"53","hashOfConfig":"43"},{"size":353,"mtime":1618242592154,"results":"54","hashOfConfig":"43"},{"size":312,"mtime":1618161310684,"results":"55","hashOfConfig":"43"},{"size":1540,"mtime":1618328215921,"results":"56","hashOfConfig":"43"},{"size":3450,"mtime":1618350609403,"results":"57","hashOfConfig":"43"},{"size":1502,"mtime":1618322660262,"results":"58","hashOfConfig":"43"},{"size":709,"mtime":1618235628073,"results":"59","hashOfConfig":"43"},{"size":823,"mtime":1618235628073,"results":"60","hashOfConfig":"43"},{"size":1982,"mtime":1618235628077,"results":"61","hashOfConfig":"43"},{"size":379,"mtime":1618235628074,"results":"62","hashOfConfig":"43"},{"size":1024,"mtime":1618235628072,"results":"63","hashOfConfig":"43"},{"size":1926,"mtime":1618328212360,"results":"64","hashOfConfig":"43"},{"size":2660,"mtime":1618333194200,"results":"65","hashOfConfig":"43"},{"size":3193,"mtime":1618328211152,"results":"66","hashOfConfig":"43"},{"size":3249,"mtime":1618328205064,"results":"67","hashOfConfig":"43"},{"size":676,"mtime":1618235628073,"results":"68","hashOfConfig":"43"},{"size":1919,"mtime":1618328206457,"results":"69","hashOfConfig":"43"},{"size":811,"mtime":1618235628077,"results":"70","hashOfConfig":"43"},{"size":326,"mtime":1618236495161,"results":"71","hashOfConfig":"43"},{"size":3013,"mtime":1618328214816,"results":"72","hashOfConfig":"43"},{"size":3556,"mtime":1618328217032,"results":"73","hashOfConfig":"43"},{"size":841,"mtime":1618235628080,"results":"74","hashOfConfig":"43"},{"size":9111,"mtime":1618929638020,"results":"75","hashOfConfig":"43"},{"size":980,"mtime":1618235628078,"results":"76","hashOfConfig":"43"},{"size":1891,"mtime":1618348846533,"results":"77","hashOfConfig":"43"},{"size":1856,"mtime":1618348872294,"results":"78","hashOfConfig":"43"},{"size":1858,"mtime":1618349278685,"results":"79","hashOfConfig":"43"},{"size":1574,"mtime":1618349136901,"results":"80","hashOfConfig":"43"},{"size":1429,"mtime":1618348835373,"results":"81","hashOfConfig":"43"},{"size":1166,"mtime":1618328633857,"results":"82","hashOfConfig":"43"},{"size":2814,"mtime":1619029906909,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"2pmtrq",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\index.js",[],["184","185"],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\store\\index.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\App.js",["186"],"import React from 'react';\r\nimport './index.css';\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router, \r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport { Footer, Header} from './components';\r\nimport { Register, Generator, SignIn, Submit, Submissions } from './pages/Index';\r\n\r\nconst Wrapper = styled.div`\r\n  background-color:${props => props.theme.backgroundHvyColor};\r\n  color:${props => props.theme.fontColor};\r\n  display:flex;\r\n  flex-direction:column;\r\n  height: 100vh;\r\n  min-height:100vh;\r\n  max-height: 100vh;\r\n  margin: 0;\r\n  overflow:auto;\r\n  width:100%;\r\n  padding-top:30px;\r\n\r\n  & .header {\r\n    width:100%;\r\n    min-height:100px;\r\n  }\r\n  & .main {\r\n    width:90%;\r\n    align-self:center;\r\n    flex-grow:1;\r\n    max-height:70%;\r\n  }\r\n  & .footer {\r\n    width:100%;\r\n    min-height:50px;\r\n    margin-top: auto;    \r\n    background-color:orange;\r\n  }\r\n`\r\n\r\nfunction App({ authenticated }) {\r\n  return (\r\n    <Router>\r\n      <Wrapper>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n        />\r\n\r\n        <div className=\"header\">\r\n          <Header/>\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route path=\"/signin\">\r\n            {(authenticated)\r\n            ? <div className=\"main\"><Generator/></div>\r\n            : <div className=\"main\"><SignIn/></div>\r\n            }\r\n          </Route>\r\n\r\n          <Route path=\"/register\">\r\n            {(authenticated)\r\n              ? <div className=\"main\"><Generator/></div>\r\n              : <div className=\"main\"><Register/></div>\r\n            }\r\n          </Route>\r\n\r\n          <Route path=\"/submissions/:category\">\r\n            {(authenticated)\r\n              ? <div className=\"main\"><Submissions/></div>\r\n              : <div className=\"main\"><SignIn/></div>\r\n            }\r\n          </Route>\r\n\r\n          <Route path=\"/submit\">\r\n            {(authenticated)\r\n              ? <div className=\"main\"><Submit/></div>\r\n              : <div className=\"main\"><SignIn/></div>\r\n            }\r\n          </Route>\r\n\r\n          <Route path=\"/generator\">\r\n            <div className=\"main\"><Generator/></div>\r\n          </Route>\r\n        </Switch>\r\n\r\n        <div className=\"footer\">\r\n          <Footer/>\r\n        </div>\r\n          \r\n      </Wrapper>\r\n    </Router>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({ authenticated: state.authenticate.authenticated });\r\n\r\nexport default connect(mapStateToProps)(App);","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\index.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\pages\\Index.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\Index.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\submissions.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\registerUser.js",["187"],"import { REGISTER_USER, CLEAR_REGISTER_ERROR } from \"../actions/action-types\";\r\n\r\nconst initialState = {\r\n   isFetching: false,\r\n};\r\n\r\nfunction registerReducer(state = initialState, action) {\r\n   if (action.type === REGISTER_USER) {\r\n      return action.payload\r\n   }\r\n   return state;\r\n};\r\n\r\nexport default registerReducer;\r\n","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharIntrigue.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharImage.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharDesc.js",["188"],"import { SUBMIT_CHAR_DESC,CLEAR_INPUT_DESC_ERROR } from \"../actions/action-types\";\r\n\r\nconst initialState = {\r\n   isFetching: false,\r\n};\r\n\r\nfunction inputCharDescReducer(state = initialState, action) {\r\n   if (action.type === SUBMIT_CHAR_DESC) {\r\n      return action.payload\r\n   }\r\n   return state;\r\n};\r\n\r\nexport default inputCharDescReducer;\r\n","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\inputCharRoleplay.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\newCharacter.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\pages\\Submit.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\pages\\Submissions.js",["189","190","191"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { getSubmissions } from \"../redux/actions/index\";\r\nimport { \r\n   LoadingIcon,\r\n   SubmittedNames, \r\n   SubmittedLastNames,\r\n   SubmittedImages,\r\n   SubmittedRoleplays,\r\n   SubmittedIntrigues,\r\n   EditEntryModal,\r\n} from '../components';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   flex-direction:column;\r\n`\r\nconst TabContainer = styled.div`\r\n   width:100%;\r\n   min-height:10%;\r\n   background-color:green;\r\n   display:flex;\r\n   justify-content:space-around;\r\n   align-items:center;\r\n`\r\nconst ContentContainer = styled.div`\r\n   width:100%;\r\n   min-height:100%;\r\n   max-height:100%;\r\n   display:flex;\r\n   flex-direction:column;\r\n\r\n`\r\n\r\nconst Submissions = ({\r\n      userEmail, \r\n      getSubmissions,\r\n      isFetching,\r\n   }) => {\r\n   const [modalDisplay, setModalDisplay] = useState(false);\r\n   const [modalData, setModalData] = useState();\r\n   const {category} = useParams();\r\n\r\n   const handleOpenModalDisplay = (entry) => {\r\n      setModalDisplay(true);\r\n      setModalData(entry);\r\n      // console.log(entry.target.dataset.text);\r\n   }\r\n\r\n\r\n   useEffect(()=> {\r\n      getSubmissions(userEmail)\r\n      console.log(category)\r\n   },[userEmail])\r\n\r\n   useEffect(()=> {\r\n      getSubmissions(userEmail)\r\n   },[])\r\n\r\n\r\n   let displayData = false\r\n   switch(category){\r\n      case 'firstnames':\r\n         displayData = <SubmittedNames handleOpenModalDisplay={handleOpenModalDisplay}/>;\r\n         break;\r\n      case 'lastnames':\r\n         displayData = <SubmittedLastNames handleOpenModalDisplay={handleOpenModalDisplay}/>;\r\n         break;\r\n      case 'images':\r\n         displayData = <SubmittedImages handleOpenModalDisplay={handleOpenModalDisplay}/>;\r\n         break;\r\n      case 'roleplay':\r\n         displayData = <SubmittedRoleplays handleOpenModalDisplay={handleOpenModalDisplay}/>;\r\n         break;\r\n      case 'intrigue':\r\n         displayData = <SubmittedIntrigues handleOpenModalDisplay={handleOpenModalDisplay}/>;\r\n         break;\r\n      default:\r\n         displayData = <SubmittedNames handleOpenModalDisplay={handleOpenModalDisplay}/>;\r\n   }\r\n\r\n   if(!isFetching){\r\n      return(\r\n         <Wrapper>\r\n            <TabContainer>\r\n               <Link to=\"/submissions/firstnames\">First Names</Link>\r\n               <Link to=\"/submissions/lastnames\">Last Names</Link>\r\n               <Link to=\"/submissions/images\">Images</Link>\r\n               <Link to=\"/submissions/roleplay\">Roleplay</Link>\r\n               <Link to=\"/submissions/intrigue\">Intrigue</Link>\r\n            </TabContainer>\r\n   \r\n            <ContentContainer>\r\n               {(modalDisplay)\r\n                  ? <EditEntryModal modalData={modalData} setModalDisplay={setModalDisplay}/>\r\n                  : <React.Fragment/>\r\n               }\r\n               {displayData}\r\n            </ContentContainer>\r\n\r\n   \r\n         </Wrapper>\r\n      )\r\n   }\r\n   else {\r\n      return(\r\n         <Wrapper>\r\n            <LoadingIcon/>\r\n         </Wrapper>\r\n      )\r\n   }\r\n   \r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({ \r\n   userEmail: state.authenticate.authenticated.email,\r\n   isFetching: state.submissions.isFetching,\r\n});\r\n\r\nexport default connect(mapStateToProps, {getSubmissions})(Submissions);\r\n","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\Header.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\CharImage.js",["192"],"import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Tilt from 'react-parallax-tilt';\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   flex-direction:row;\r\n   flex-wrap:wrap;\r\n   justify-content:center;\r\n   border:3px solid black;\r\n   border-radius:5px;\r\n   align-content:center;\r\n`\r\n\r\nconst CharImage = ({ newCharImage }) => {\r\n   \r\n   return(\r\n      <Wrapper>\r\n         <Tilt>\r\n            <img src={newCharImage}/>\r\n         </Tilt>\r\n      </Wrapper>\r\n   )\r\n}\r\nconst mapStateToProps = (state) => ({ newCharImage: state.newChar.newChar.data[0][0].url });\r\nexport default connect(mapStateToProps)(CharImage);","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\CharRoleplay.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\Sidebar.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\Footer.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\CharDesc.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharIntrigue.js",["193"],"import React, { useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { submitCharIntrigue } from \"../redux/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadingIcon } from '.';\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   flex-direction:row;\r\n   flex-wrap:wrap;\r\n   justify-content:center;\r\n   border:3px solid black;\r\n   border-radius:5px;\r\n   align-content:center;\r\n`\r\nconst ErrorBox = styled.div`\r\n   width:100px;\r\n   height:100px;\r\n   background-color:red;   \r\n`\r\n\r\n\r\nconst InputCharIntrigue = ({isFetching, userEmail, userID, submitCharIntrigue}) => {\r\n   const [ inputIntrigue, setinputIntrigue] = useState(false);\r\n\r\n   const handleIntrigue = (event) =>{\r\n      let str = event.target.value.split('.').join(\"\").trim();\r\n      setinputIntrigue(str);\r\n   }\r\n   const handleSubmit = () => {\r\n      submitCharIntrigue(\r\n         inputIntrigue,\r\n         userEmail,\r\n         userID,\r\n      )\r\n   }\r\n   if(isFetching){\r\n      return(\r\n         <Wrapper>\r\n            <LoadingIcon/>\r\n         </Wrapper>\r\n      )\r\n   }\r\n   else {\r\n      return(\r\n         <Wrapper >\r\n            <form onSubmit={()=>handleSubmit()}>\r\n               Character Intrigue:\r\n               <textarea \r\n                  placeholder=\"Character Intrigue\" \r\n                  onChange={handleIntrigue} \r\n                  type=\"text\" \r\n                  required=\"required\"\r\n                  minLength=\"3\"\r\n                  maxLength=\"80\"\r\n               />\r\n               <button type={\"submit\"}>Submit</button>\r\n            </form>\r\n         </Wrapper>\r\n      )\r\n   }\r\n} \r\n\r\n\r\nconst mapStateToProps = (state) => ({  \r\n   isFetching:state.inputCharIntrigue.isFetching, \r\n   userID: state.authenticate.authenticated.id,\r\n   userEmail: state.authenticate.authenticated.email\r\n});\r\n\r\nexport default connect(mapStateToProps, { submitCharIntrigue })(InputCharIntrigue);","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\pages\\Generator.js",["194"],"import React, {useEffect} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { LoadingIcon, CharImage, CharDesc, CharIntrigue, CharRoleplay, Sidebar} from '../components';\r\nimport { generateCharacter } from \"../redux/actions/index\";\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n\r\n   & .main {\r\n\r\n      background-color:${props => props.backgroundLgtColor};\r\n      color:${props => props.fontColor};\r\n      transition: background-color 5s ease-out;\r\n      transition: color 5s linear;\r\n      min-height:100%;\r\n      min-width:80%;\r\n      display: grid;\r\n      grid-template-columns: repeat(2, 1fr);\r\n      grid-template-rows: repeat(2, 1fr);\r\n      grid-column-gap: 0px;\r\n      grid-row-gap: 0px; \r\n   }\r\n`\r\nconst OutputDesc = styled.div`\r\n   grid-area: 1 / 1 / 2 / 2;\r\n   overflow: hidden;\r\n`\r\nconst OutputImage = styled.div`\r\n   grid-area: 1 / 2 / 2 / 3;\r\n   overflow: hidden;\r\n`\r\nconst OutputRoleplay = styled.div`\r\n   grid-area: 2 / 1 / 3 / 2;\r\n   overflow: hidden;\r\n`\r\nconst OutputIntrigue = styled.div`\r\n   grid-area: 2 / 2 / 3 / 3;\r\n   overflow: hidden;\r\n`\r\n\r\nconst Generator = ({generateCharacter, newChar, isFetching}) => {\r\n\r\n   useEffect(()=>{\r\n      console.log(newChar)\r\n      if(!newChar){\r\n         generateCharacter({ gender:'random', race:'random' })\r\n      }\r\n   },[])\r\n\r\n   if(isFetching === false){\r\n      return(\r\n         <Wrapper>\r\n            <Sidebar page={'generator'}/>\r\n            \r\n\r\n            <div className=\"main\">\r\n               {(newChar !== false) \r\n                  ? (   \r\n                     <React.Fragment>\r\n                        <OutputImage>\r\n                           <CharImage/>\r\n                        </OutputImage>\r\n\r\n                        <OutputDesc>\r\n                           <CharDesc/>\r\n                        </OutputDesc>\r\n\r\n                        <OutputRoleplay>\r\n                           <CharRoleplay/>\r\n                        </OutputRoleplay>\r\n\r\n                        <OutputIntrigue>\r\n                           <CharIntrigue/>\r\n                        </OutputIntrigue>\r\n                     </React.Fragment>\r\n                  ) \r\n                  : <div></div>\r\n               }\r\n            </div>\r\n         </Wrapper>\r\n         )\r\n      }\r\n   else{\r\n      return(\r\n         <Wrapper>\r\n            <Sidebar page={'generator'}/>\r\n            <LoadingIcon/>\r\n         </Wrapper>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ newChar: state.newChar.newChar, isFetching:state.newChar.isFetching });\r\n\r\nexport default connect(mapStateToProps, {generateCharacter})(Generator);","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharDesc.js",["195"],"import React, { useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { submitCharDesc } from \"../redux/actions/index\";\r\nimport {optionsRace, optionsGender} from \"../constants/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadingIcon } from '.';\r\n\r\nimport Select from 'react-select';\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   flex-direction:row;\r\n   flex-wrap:wrap;\r\n   justify-content:center;\r\n   border:3px solid black;\r\n   border-radius:5px;\r\n   align-content:center;\r\n`\r\n\r\nconst ErrorBox = styled.div`\r\n   width:100px;\r\n   height:100px;\r\n   background-color:red;   \r\n`\r\n\r\n\r\nconst InputCharDesc = ({ isFetching, submitCharDesc, userID, userEmail}) => {\r\n   const [ selectedGender, setSelectedGender] = useState('random');\r\n   const [ selectedRace, setSelectedRace] = useState('random');\r\n   const [ inputFName, setinputFName] = useState('random');\r\n   const [ inputLName, setinputLName] = useState('random');\r\n\r\n   const handleGender = (event) => {\r\n      setSelectedGender(event.value)\r\n   }\r\n   const handleRace = (event) => {\r\n      setSelectedRace(event.value)\r\n   }\r\n   const handleFName = (event) => {\r\n      setinputFName(event.target.value.split('.').join(\"\").trim())\r\n   }\r\n   const handleLName = (event) => {\r\n      setinputLName(event.target.value.split('.').join(\"\").trim())\r\n   }\r\n   const handleSubmit = () => {\r\n      submitCharDesc(\r\n         selectedRace, \r\n         selectedGender,\r\n         inputFName,\r\n         inputLName,\r\n         userEmail,\r\n         userID,\r\n      )\r\n   }\r\n   if(isFetching){\r\n      return(\r\n         <Wrapper>\r\n            <LoadingIcon/>\r\n         </Wrapper>\r\n      )\r\n   }\r\n   else {\r\n      return(\r\n         <Wrapper >\r\n            <form>\r\n               Character Names:\r\n               <Select\r\n                  defaultValue={optionsRace[0]}\r\n                  options={optionsRace}\r\n                  onChange={handleRace}\r\n                  isSearchable={false}\r\n               />\r\n               <Select\r\n                  defaultValue={optionsGender[0]}\r\n                  options={optionsGender}\r\n                  onChange={handleGender}\r\n                  isSearchable={false}\r\n               />\r\n               <input\r\n                  onChange={handleFName}\r\n                  minLength=\"3\"\r\n                  maxLength=\"20\"\r\n                  name=\"charFName\"\r\n                  placeholder=\"First Name\"\r\n               />\r\n               <input\r\n                  onChange={handleLName}\r\n                  minLength=\"3\"\r\n                  maxLength=\"20\"\r\n                  name=\"charLName\"\r\n                  placeholder=\"Optional Last Name - Gender neutral\"\r\n               />\r\n               <button\r\n                  type={\"button\"}\r\n                  onClick={()=> handleSubmit()}\r\n               >Submit</button>\r\n            </form>\r\n         </Wrapper>\r\n      )\r\n   }\r\n} \r\n\r\n\r\nconst mapStateToProps = (state) => ({ \r\n   isFetching:state.inputCharDesc.isFetching, \r\n   userID:state.authenticate.authenticated.id, \r\n   userEmail:state.authenticate.authenticated.email });\r\n\r\nexport default connect(mapStateToProps, { submitCharDesc })(InputCharDesc);","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharImage.js",["196"],"import React, { useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport {submitCharImage } from \"../redux/actions/index\";\r\nimport {optionsRace, optionsGender} from \"../constants/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadingIcon } from '.';\r\n\r\nimport Select from 'react-select';\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   flex-direction:row;\r\n   flex-wrap:wrap;\r\n   justify-content:center;\r\n   border:3px solid black;\r\n   border-radius:5px;\r\n   align-content:center;\r\n`\r\n\r\nconst ErrorBox = styled.div`\r\n   width:100px;\r\n   height:100px;\r\n   background-color:red;   \r\n`\r\n\r\n\r\nconst InputCharImage = ({ isFetching,  submitCharImage, userID, userEmail }) => {\r\n   const [ selectedGender, setSelectedGender] = useState('random');\r\n   const [ selectedRace, setSelectedRace] = useState('random');\r\n   const [ previewSRC, setPreviewSRC] = useState('');\r\n\r\n   const handleGender = (event) => {\r\n      setSelectedGender(event.value)\r\n   }\r\n   const handleRace = (event) => {\r\n      setSelectedRace(event.value)\r\n   }\r\n\r\n   const handleSubmit = () => {\r\n      \r\n      submitCharImage(\r\n         previewSRC,\r\n         selectedGender,\r\n         selectedRace, \r\n         userEmail,\r\n         userID,\r\n      )\r\n   }\r\n\r\n   const handlePreview = (data) => {\r\n      console.log(data)\r\n      data.preventDefault();\r\n      let file = data.target.files[0];\r\n      let reader = new FileReader();\r\n      if (data.target.files.length === 0) {\r\n        return;\r\n      }\r\n      reader.onloadend = (data) => {\r\n         setPreviewSRC([reader.result])\r\n      }\r\n      reader.readAsDataURL(file);\r\n   }\r\n\r\n   if(isFetching){\r\n      return(\r\n         <Wrapper>\r\n            <LoadingIcon/>\r\n         </Wrapper>\r\n      )\r\n   }\r\n   else {\r\n      return(\r\n         <Wrapper >\r\n            <form>\r\n               Character Image:\r\n               <Select  \r\n                  className=\"selectContainer\"\r\n                  defaultValue={optionsGender[0]}\r\n                  onChange={handleGender}\r\n                  isSearchable={false}\r\n                  options={optionsGender}\r\n               />\r\n               <Select  \r\n                  className=\"selectContainer\"\r\n                  defaultValue={optionsRace[0]}\r\n                  onChange={handleRace}\r\n                  isSearchable={false}\r\n                  options={optionsRace}\r\n               />\r\n   \r\n               <input\r\n                  type=\"file\"\r\n                  accept=\"image/png, image/jpeg\"\r\n                  id=\"file\"\r\n                  onChange={handlePreview} \r\n               />\r\n               <label htmlFor=\"file\"/>\r\n               \r\n               <button\r\n                  type={\"button\"}\r\n                  onClick={()=> handleSubmit()}\r\n                  >Submit\r\n               </button>\r\n   \r\n   \r\n            </form>\r\n            <img src={previewSRC} alt=\"\"/>\r\n         </Wrapper>\r\n      )\r\n   }\r\n   \r\n} \r\n\r\n\r\nconst mapStateToProps = (state) => (\r\n   {  \r\n      isFetching:state.inputCharImage.isFetching, \r\n      userID: state.authenticate.authenticated.id,\r\n      userEmail: state.authenticate.authenticated.email  \r\n   }\r\n);\r\n\r\nexport default connect(mapStateToProps, {  submitCharImage })(InputCharImage);","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\CharIntrigue.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\InputCharRoleplay.js",["197"],"import React, { useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { submitCharRoleplay } from \"../redux/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadingIcon } from '.';\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   flex-direction:row;\r\n   flex-wrap:wrap;\r\n   justify-content:center;\r\n   border:3px solid black;\r\n   border-radius:5px;\r\n   align-content:center;\r\n`\r\nconst ErrorBox = styled.div`\r\n   width:100px;\r\n   height:100px;\r\n   background-color:red;   \r\n`\r\n\r\nconst InputCharRoleplay = ({isFetching, submitCharRoleplay, userEmail, userID }) => {\r\n   const [ inputRoleplay, setinputRoleplay] = useState(false);\r\n\r\n   const handleRoleplay = (event) =>{\r\n      let str = event.target.value.split('.').join(\"\").trim();\r\n      setinputRoleplay(str);\r\n   }\r\n   const handleSubmit = () => {\r\n      submitCharRoleplay(\r\n         inputRoleplay,\r\n         userEmail,\r\n         userID,\r\n      )\r\n   }\r\n\r\n   if(isFetching){\r\n      return(\r\n         <Wrapper>\r\n            <LoadingIcon/>\r\n         </Wrapper>\r\n      )\r\n   }\r\n   else {\r\n      return(\r\n         <Wrapper >\r\n            <form onSubmit={()=>handleSubmit()}>\r\n               Roleplay cue:\r\n               <textarea \r\n                  placeholder=\"Roleplay Cues:\" \r\n                  onChange={handleRoleplay} \r\n                  type=\"text\" \r\n                  required=\"required\"\r\n                  minLength=\"3\"\r\n                  maxLength=\"80\"\r\n               />\r\n               <button type={\"submit\"}>Submit</button>\r\n            </form>\r\n         </Wrapper>\r\n      )\r\n   }\r\n\r\n} \r\n\r\n\r\nconst mapStateToProps = (state) => ({  \r\n   isFetching:state.inputCharRoleplay.isFetching, \r\n   userID: state.authenticate.authenticated.id,\r\n   userEmail: state.authenticate.authenticated.email\r\n});\r\n\r\nexport default connect(mapStateToProps, { submitCharRoleplay })(InputCharRoleplay);","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\LoadingIcon.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\reducers\\authenticate.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\pages\\SignIn.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\pages\\Register.js",["198","199"],"import React, { useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../redux/actions/index\";\r\nimport Loader from 'react-loader-spinner';\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingIcon } from '../components';\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   display:flex;\r\n   justify-content:center;\r\n\r\n   & .registerForm {\r\n      padding:20px;\r\n      background-color:${props => props.theme.backgroundLgtColor};\r\n      color:${props => props.theme.fontColor};\r\n      align-self:center;\r\n      width:50%;\r\n      justify-content:center;\r\n      max-width:600px;\r\n      border-radius:5px;\r\n   }\r\n   & .registerFieldset {\r\n      display:flex;\r\n      flex-direction:column;\r\n      padding:10px;\r\n   }\r\n   & .buttonContainer {\r\n      margin: 10px auto 0;\r\n      width:100%;\r\n   }\r\n   & .registerInput {\r\n      padding:10px;\r\n      width:100%;\r\n      margin: 0 auto;\r\n   }\r\n`\r\n\r\nconst ErrorBox = styled.div`\r\n   width:100px;\r\n   height:100px;\r\n   background-color:red;   \r\n`\r\n\r\nconst Register = ({registerUser, isFetching}) => {\r\n   const [ userEmail, setUserEmail] = useState(false);\r\n   const [ userPassword, setUserPassword] = useState(false);\r\n   const [ userName, setUserName] = useState(false);\r\n\r\n   const handlePassword = (event) => {\r\n      setUserPassword(event.target.value)\r\n   }\r\n   const handleEmail = (event) => {\r\n      setUserEmail(event.target.value)\r\n   }\r\n   const handleUserName = (event) => {\r\n      setUserName(event.target.value)\r\n   }\r\n   if(isFetching === false){\r\n      return(\r\n         <Wrapper>\r\n            <form>\r\n               <fieldset>\r\n                  <legend>Register</legend>\r\n                  <input\r\n                     placeholder=\"User Name\"\r\n                     className=\"registerInput\"\r\n                     onChange={handleUserName} \r\n                     type=\"text\" name=\"user-name\"  id=\"user-name\" \r\n                  />\r\n                  <input\r\n                     placeholder=\"Email\"\r\n                     className=\"registerInput\"\r\n                     onChange={handleEmail} \r\n                     type=\"email\" name=\"email-address\"  id=\"email-address\" \r\n                  />\r\n                  <input \r\n                     placeholder=\"Password\"\r\n                     className=\"registerInput\"\r\n                     onChange={handlePassword} \r\n                     type=\"password\" name=\"password\"  id=\"password\" \r\n                  />\r\n                  <div className=\"buttonContainer\">\r\n                     <input \r\n                        className=\"registerInput\" \r\n                        type=\"submit\" \r\n                        value=\"Register\" \r\n                        onClick={()=> registerUser({userEmail, userPassword, userName})}\r\n                     />\r\n                  </div>\r\n\r\n                  <Link className=\"buttonContainer\" to=\"/signIn\"> \r\n                     <input\r\n                        type=\"submit\" \r\n                        value=\"Sign In\"\r\n                        className=\"registerInput\" \r\n                     />\r\n                  </Link>\r\n               </fieldset>\r\n            </form>\r\n         </Wrapper>\r\n      )   \r\n   }\r\n   else {\r\n      return(\r\n         <Wrapper>\r\n            <LoadingIcon/>\r\n         </Wrapper>\r\n      )\r\n   } \r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({ authenticated: state.signIn.authenticated, isFetching: state.register.isFetching });\r\n\r\nexport default connect(mapStateToProps, { registerUser, })(Register);","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\actions\\action-types.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\redux\\actions\\index.js",["200","201","202","203","204","205","206","207"],"import { \r\n   SUBMIT_CHAR_ROLEPLAY, \r\n   SUBMIT_CHAR_INTRIGUE, \r\n   SUBMIT_CHAR_IMAGE, \r\n   SUBMIT_CHAR_DESC, \r\n   GET_SUBMISSIONS, \r\n   NEW_CHAR, \r\n   SIGN_IN, \r\n   REGISTER_USER, \r\n} from \"./action-types\";\r\nimport axios from 'axios';\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nexport const submitCharDesc = (\r\n   selectedRace, \r\n   selectedGender,\r\n   inputFName,\r\n   inputLName,\r\n   userEmail,\r\n   userID,) => async (dispatch) => {\r\n\r\n   dispatch({\r\n      type: SUBMIT_CHAR_DESC,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"race\": selectedRace,\r\n      \"gender\": selectedGender,\r\n      \"name\":inputFName,\r\n      \"lastname\":inputLName,\r\n      \"email\":userEmail,\r\n      \"id\":userID\r\n   })\r\n   const inputCharDescAPI = await axios.post('https://safe-dawn-37731.herokuapp.com/addname', json, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n   })\r\n   dispatch({\r\n      type: SUBMIT_CHAR_DESC,\r\n      payload:{\r\n         isFetching: false,\r\n      },\r\n   })\r\n}\r\n\r\n\r\n\r\n\r\nexport const submitCharImage = (\r\n   previewSRC,\r\n   selectedGender,\r\n   selectedRace, \r\n   userEmail,\r\n   userID,) => async (dispatch) => {\r\n\r\n   dispatch({\r\n      type: SUBMIT_CHAR_IMAGE,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"race\": selectedRace,\r\n      \"gender\": selectedGender,\r\n      \"image\": previewSRC,\r\n      \"email\":userEmail,\r\n      \"id\":userID\r\n   })\r\n   const inputCharImageAPI = await axios.post('https://safe-dawn-37731.herokuapp.com/charimage', json, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n   })\r\n   dispatch({\r\n      type: SUBMIT_CHAR_IMAGE,\r\n      payload:{\r\n         isFetching: false,\r\n      },\r\n   })\r\n}\r\n\r\nexport const submitCharIntrigue = (\r\n   inputIntrigue, \r\n   userEmail,\r\n   userID,) => async (dispatch) => {\r\n\r\n   dispatch({\r\n      type: SUBMIT_CHAR_INTRIGUE,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"intrigue\": inputIntrigue,\r\n      \"email\":userEmail,\r\n      \"id\":userID\r\n   })\r\n   const inputCharIntrigueAPI = await axios.post('https://safe-dawn-37731.herokuapp.com/addintrigue', json, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n   })\r\n   dispatch({\r\n      type: SUBMIT_CHAR_INTRIGUE,\r\n      payload:{\r\n         isFetching: false,\r\n      },\r\n   })\r\n}\r\n\r\n\r\n\r\nexport const getSubmissions = (userEmail) => async (dispatch) => {\r\n   dispatch({\r\n      type: GET_SUBMISSIONS,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"email\": userEmail\r\n   })\r\n   const getSubmissionsResponse = await axios.post('https://safe-dawn-37731.herokuapp.com/getsubmissions', json, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n   })\r\n   console.log(getSubmissionsResponse)\r\n   dispatch({\r\n      type: GET_SUBMISSIONS,\r\n      payload:{\r\n         isFetching: false,\r\n         submittedFNames: [\r\n            getSubmissionsResponse.data[0],\r\n            getSubmissionsResponse.data[1],\r\n            getSubmissionsResponse.data[2],\r\n            getSubmissionsResponse.data[3],\r\n            getSubmissionsResponse.data[4],\r\n         ],\r\n         submittedLNames: [\r\n            getSubmissionsResponse.data[10],\r\n            getSubmissionsResponse.data[11],\r\n            getSubmissionsResponse.data[12],\r\n            getSubmissionsResponse.data[13],\r\n            getSubmissionsResponse.data[14],\r\n         ],\r\n         submittedImages: [\r\n            getSubmissionsResponse.data[5],\r\n            getSubmissionsResponse.data[6],\r\n            getSubmissionsResponse.data[7],\r\n            getSubmissionsResponse.data[8],\r\n            getSubmissionsResponse.data[9],\r\n         ],\r\n         submittedRoleplays: getSubmissionsResponse.data[15],\r\n         submittedIntrigues: getSubmissionsResponse.data[16],\r\n      },\r\n   })\r\n   return true;\r\n}\r\n\r\nexport const editUserSubmission = ( entryType, editedUserSub, email, entryValue ) => async (dispatch) => {\r\n   dispatch({\r\n      type: SUBMIT_CHAR_INTRIGUE,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"entryType\": entryType,\r\n      \"entryData\": editedUserSub,\r\n      \"userEmail\": email,\r\n      \"originalSub\": entryValue\r\n   })\r\n   const getSubmissionsResponse = await axios.post('https://safe-dawn-37731.herokuapp.com/edit', json, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n   })\r\n   .then(res => {\r\n      dispatch({\r\n         type: SUBMIT_CHAR_INTRIGUE,\r\n         payload:{\r\n            isFetching: false,\r\n         },\r\n      })\r\n   })\r\n   .catch(error => {\r\n      dispatch({\r\n         type: SUBMIT_CHAR_INTRIGUE,\r\n         payload:{\r\n            isFetching: false,\r\n            error:true,\r\n         },\r\n      })\r\n   });\r\n}\r\n\r\nexport const deleteUserSubmission = ( intrigue, email, id ) => async (dispatch) => {\r\n   dispatch({\r\n      type: SUBMIT_CHAR_INTRIGUE,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"entryType\": intrigue,\r\n      \"userEmail\": email,\r\n      \"originalSub\": id,\r\n   })\r\n   const getSubmissionsResponse = await axios.post('https://safe-dawn-37731.herokuapp.com/delete', json, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n   })\r\n   .then(res => {\r\n      dispatch({\r\n         type: SUBMIT_CHAR_INTRIGUE,\r\n         payload:{\r\n            isFetching: false,\r\n         },\r\n      })\r\n   })\r\n   .catch(error => {\r\n      dispatch({\r\n         type: SUBMIT_CHAR_INTRIGUE,\r\n         payload:{\r\n            isFetching: false,\r\n            error:true,\r\n         },\r\n      })\r\n   });\r\n}\r\n\r\n\r\n\r\nexport const submitCharRoleplay = ( roleplay, email, id ) => async (dispatch) => { \r\n   dispatch({\r\n      type: SUBMIT_CHAR_ROLEPLAY,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"roleplay\": roleplay,\r\n      \"email\": email,\r\n      \"id\": id,\r\n   })\r\n   const getSubmissionsResponse = await axios.post('https://safe-dawn-37731.herokuapp.com/addroleplay', json, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n   })\r\n   .then(res => {\r\n      dispatch({\r\n         type: SUBMIT_CHAR_ROLEPLAY,\r\n         payload:{\r\n            isFetching: false,\r\n         },\r\n      })\r\n   })\r\n   .catch(error => {\r\n      dispatch({\r\n         type: SUBMIT_CHAR_ROLEPLAY,\r\n         payload:{\r\n            isFetching: false,\r\n            error:true,\r\n         },\r\n      })\r\n   });\r\n}\r\n\r\nexport const generateCharacter = ({gender, race}) => async (dispatch) => {\r\n   dispatch({\r\n      type: NEW_CHAR,\r\n      payload:{\r\n         isFetching: true,\r\n         newChar: {},\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"race\": race,\r\n      \"gender\": gender\r\n   })\r\n   const genCharResponse = await axios.post('https://safe-dawn-37731.herokuapp.com/genchar', json, {\r\n      headers: { 'Content-Type': 'application/json' }\r\n   });\r\n   dispatch({\r\n      type: NEW_CHAR,\r\n      payload:{\r\n         isFetching: false,\r\n         newChar: genCharResponse,\r\n      },\r\n   })\r\n}\r\n\r\nexport const signIn = ({userEmail, userPassword}) => async (dispatch) => {\r\n   dispatch({\r\n      type: SIGN_IN,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"email\": userEmail,\r\n      \"password\": userPassword\r\n   })\r\n   const authenticated = await axios.post('https://safe-dawn-37731.herokuapp.com/signin', json, {\r\n      headers: { 'Content-Type': 'application/json' }\r\n   })\r\n\r\n   .then(data => {\r\n      console.log(data)\r\n      dispatch({\r\n         type: SIGN_IN,\r\n         payload:{\r\n            isFetching: false,\r\n            authenticated: data.data,\r\n         },\r\n      })\r\n   })\r\n   .catch(error => {\r\n      toast.dismiss();\r\n      toast.error('Incorrect email address or password.');\r\n      dispatch({\r\n         type: SIGN_IN,\r\n         payload:{\r\n            isFetching: false,\r\n            authenticated: false,\r\n         },\r\n      })\r\n   });\r\n}\r\n\r\nexport const registerUser = ({userEmail, userPassword, userName}) => async (dispatch) => {\r\n   dispatch({\r\n      type: REGISTER_USER,\r\n      payload:{\r\n         isFetching: true,\r\n      },\r\n   })\r\n   const json = JSON.stringify({\r\n      \"email\": userEmail,\r\n      \"password\": userPassword,\r\n      \"name\" : userName\r\n   })\r\n   const authenticated = await axios.post('https://safe-dawn-37731.herokuapp.com/register', json, {\r\n      headers: { 'Content-Type': 'application/json' }\r\n   })\r\n   .then(data => {\r\n      dispatch({\r\n         type: REGISTER_USER,\r\n         payload:{\r\n            isFetching: false,\r\n         },\r\n      })\r\n      dispatch({\r\n         type: SIGN_IN,\r\n         payload:{\r\n            authenticated: true,\r\n         },\r\n      })\r\n   })\r\n   .catch(error => {\r\n      toast.dismiss();\r\n      toast.error('Incorrect email address or password.');\r\n      dispatch({\r\n         type: REGISTER_USER,\r\n         payload:{\r\n            isFetching: false,\r\n         },\r\n      })\r\n   });\r\n}","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\constants\\index.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedNames.js",["208"],"import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   max-height:100%;\r\n   background-color:purple;\r\n   overflow-y:auto;\r\n\r\n   display:flex;\r\n   flex-direction:column;\r\n   padding:20px 20px 20px 20px;\r\n\r\n   & h3 {\r\n\r\n   }\r\n   & p {\r\n      cursor:pointer;\r\n   }\r\n`\r\nconst SubmittedNames = ({handleOpenModalDisplay, submittedFNames}) => {\r\n   const [ displayFNames, setDisplayFNames] = useState([]);\r\n   const races = ['Human','Orc','Dwarf','Elf','Halfling'];\r\n\r\n   const buildFNameElements = () => {\r\n      let elementList = [];\r\n      let counter = 0;\r\n      let raceCounter = 0;\r\n      Object.keys(submittedFNames).forEach(key => {\r\n         elementList.push(\r\n            <h3 key={counter}>{races[raceCounter]}</h3>\r\n         )\r\n         counter++;\r\n         raceCounter++;\r\n         submittedFNames[key].forEach(function callback(element){\r\n            elementList.push(\r\n               <p \r\n                  data-text={element.name} \r\n                  onClick={()=>handleOpenModalDisplay(element)} \r\n                  key={counter}>Name:{element.name} \r\n                  Gender:{(element.gender) ? 'male' : 'female'}\r\n                  Moderation Status:{(element.moderation) ? 'Accepted' : (element.moderation === null) ? 'Pending' : 'Failed' }\r\n               </p>\r\n            )\r\n            counter++\r\n         })\r\n      })\r\n      setDisplayFNames(elementList)\r\n      console.log('built')\r\n   }\r\n\r\n   useEffect(()=>{\r\n      if(submittedFNames){\r\n         buildFNameElements();\r\n      }\r\n   }, [])\r\n   \r\n   \r\n\r\n   return(\r\n      <Wrapper>\r\n         {displayFNames}\r\n      </Wrapper>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n   submittedFNames:state.submissions.submittedFNames,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SubmittedNames);","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedLastNames.js",["209"],"import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   max-height:100%;\r\n   background-color:purple;\r\n   overflow-y:auto;\r\n\r\n   display:flex;\r\n   flex-direction:column;\r\n   padding:20px 20px 20px 20px;\r\n\r\n   & h3 {\r\n\r\n   }\r\n   & p {\r\n      cursor:pointer;\r\n   }\r\n`\r\nconst SubmittedLastNames = ({handleOpenModalDisplay, submittedLNames}) => {\r\n   const [ displayLNames, setDisplayLNames] = useState([]);\r\n   const races = ['Human','Orc','Dwarf','Elf','Halfling'];\r\n\r\n   const buildLNameElements = () => {\r\n      let elementList = [];\r\n      let counter = 0;\r\n      let raceCounter = 0;\r\n      Object.keys(submittedLNames).forEach(key => {\r\n         elementList.push(\r\n            <h3 key={counter}>{races[raceCounter]}</h3>\r\n         )\r\n         counter++;\r\n         raceCounter++;\r\n         submittedLNames[key].forEach(function callback(element){\r\n            elementList.push(\r\n               <p \r\n                  data-text={element.lastname} \r\n                  key={counter}\r\n                  onClick={()=>handleOpenModalDisplay(element)} \r\n               >\r\n                  Last Name:{element.lastname} \r\n                  Moderation Status:{(element.moderation) ? 'Accepted' : (element.moderation === null) ? 'Pending' : 'Failed' }\r\n               </p>\r\n            )\r\n            counter++\r\n         })\r\n      })\r\n      setDisplayLNames(elementList)\r\n   }\r\n\r\n   useEffect(()=>{\r\n      if(submittedLNames){\r\n         buildLNameElements();\r\n      }\r\n   }, [])\r\n   \r\n   \r\n\r\n   return(\r\n      <Wrapper>\r\n         {displayLNames}\r\n      </Wrapper>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n   submittedLNames:state.submissions.submittedLNames,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SubmittedLastNames);","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedImages.js",["210"],"import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   max-height:100%;\r\n   background-color:purple;\r\n   overflow-y:auto;\r\n\r\n   display:flex;\r\n   flex-direction:column;\r\n   padding:20px 20px 20px 20px;\r\n\r\n   & h3 {\r\n\r\n   }\r\n   & p {\r\n      cursor:pointer;\r\n   }\r\n`\r\n\r\nconst SubmittedImages = ({handleOpenModalDisplay, submittedImages}) => {\r\n   const [ displayImages, setDisplayImages] = useState([]);\r\n   const races = ['Human','Orc','Dwarf','Elf','Halfling'];\r\n\r\n   const buildImageElements = () => {\r\n      let elementList = [];\r\n      let counter = 0;\r\n      let raceCounter = 0;\r\n      Object.keys(submittedImages).forEach(key => {\r\n         elementList.push(\r\n            <h3 key={counter}>{races[raceCounter]}</h3>\r\n         )\r\n         counter++;\r\n         raceCounter++;\r\n         submittedImages[key].forEach(function callback(element){\r\n            elementList.push(\r\n               <p \r\n                  key={counter}\r\n                  onClick={()=>handleOpenModalDisplay(element)} \r\n               >\r\n                  URL:{element.url} \r\n                  Gender:{(element.gender) ? 'male' : 'female'} \r\n                  Moderation Status:{(element.moderation) ? 'Accepted' : (element.moderation === null) ? 'Pending' : 'Failed' }\r\n               </p>\r\n            )\r\n            counter++\r\n         })\r\n      })\r\n      setDisplayImages(elementList)\r\n   }\r\n\r\n   useEffect(()=>{\r\n      if(submittedImages){\r\n         buildImageElements();\r\n      }\r\n   }, [])\r\n   \r\n   \r\n\r\n   return(\r\n      <Wrapper>\r\n         {displayImages}\r\n      </Wrapper>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n   submittedImages:state.submissions.submittedImages,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SubmittedImages);","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedRoleplays.js",["211","212"],"import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   max-height:100%;\r\n   background-color:purple;\r\n   overflow-y:auto;\r\n\r\n   display:flex;\r\n   flex-direction:column;\r\n   padding:20px 20px 20px 20px;\r\n\r\n   & h3 {\r\n\r\n   }\r\n   & p {\r\n      cursor:pointer;\r\n   }\r\n`\r\nconst SubmittedRoleplays = ({handleOpenModalDisplay, submittedRoleplays}) => {\r\n   const [ displayRoleplays, setDisplayRoleplays] = useState([]);\r\n   const races = ['Human','Orc','Dwarf','Elf','Halfling'];\r\n\r\n   const buildRoleplayElements = () => {\r\n      let elementList = [];\r\n      submittedRoleplays.forEach(function callback(element, index){\r\n         elementList.push(\r\n            <p \r\n               data-text={element.roleplay} \r\n               key={index}\r\n               onClick={()=>handleOpenModalDisplay(element)}\r\n            >\r\n               Roleplay Cue:{element.roleplay} \r\n               Moderation Status:{(element.moderation) ? 'Accepted' : (element.moderation === null) ? 'Pending' : 'Failed' }\r\n            </p>\r\n         )\r\n      })\r\n      setDisplayRoleplays(elementList)\r\n   }\r\n\r\n   useEffect(()=>{\r\n      if(submittedRoleplays){\r\n         buildRoleplayElements();\r\n      }\r\n   }, [])\r\n   \r\n   \r\n\r\n   return(\r\n      <Wrapper>\r\n         {displayRoleplays}\r\n      </Wrapper>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n   submittedRoleplays:state.submissions.submittedRoleplays,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SubmittedRoleplays);","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\SubmittedIntrigues.js",["213"],"import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Wrapper = styled.div`\r\n   width:100%;\r\n   height:100%;\r\n   max-height:100%;\r\n   background-color:purple;\r\n   overflow-y:auto;\r\n\r\n`\r\nconst SubmittedIntrigues = ({handleOpenModalDisplay, submittedIntrigues}) => {\r\n   const [ displayIntrigues, setDisplayIntrigues] = useState([]);\r\n\r\n   const buildIntrigueElements = () => {\r\n      let elementList = [];\r\n      submittedIntrigues.forEach(function callback(element, index){\r\n         elementList.push(\r\n            <p \r\n               data-text={element.intrigue} \r\n               key={index}\r\n               onClick={()=>handleOpenModalDisplay(element)} \r\n            >\r\n               Intrigue:{element.intrigue} \r\n               Moderation Status:{(element.moderation) ? 'Accepted' : (element.moderation === null) ? 'Pending' : 'Failed' }\r\n            </p>\r\n         )\r\n      })\r\n      setDisplayIntrigues(elementList)\r\n   }\r\n\r\n   useEffect(()=>{\r\n      console.log(submittedIntrigues)\r\n      if(submittedIntrigues){\r\n         buildIntrigueElements();\r\n      }\r\n   }, [])\r\n   \r\n   \r\n\r\n   return(\r\n      <Wrapper>\r\n         {displayIntrigues}\r\n      </Wrapper>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n   submittedIntrigues:state.submissions.submittedIntrigues,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SubmittedIntrigues);","C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\index.js",[],"C:\\Users\\sirfl\\Desktop\\GITHUB\\The-Community-NPC-Generator-Front-End\\src\\components\\EditEntryModal.js",["214"],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":9,"column":3,"nodeType":"221","messageId":"222","endLine":9,"endColumn":11},{"ruleId":"219","severity":1,"message":"223","line":1,"column":25,"nodeType":"221","messageId":"222","endLine":1,"endColumn":45},{"ruleId":"219","severity":1,"message":"224","line":1,"column":27,"nodeType":"221","messageId":"222","endLine":1,"endColumn":49},{"ruleId":"219","severity":1,"message":"220","line":14,"column":16,"nodeType":"221","messageId":"222","endLine":14,"endColumn":24},{"ruleId":"225","severity":1,"message":"226","line":59,"column":6,"nodeType":"227","endLine":59,"endColumn":17,"suggestions":"228"},{"ruleId":"225","severity":1,"message":"229","line":63,"column":6,"nodeType":"227","endLine":63,"endColumn":8,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":23,"column":13,"nodeType":"233","endLine":23,"endColumn":38},{"ruleId":"219","severity":1,"message":"234","line":18,"column":7,"nodeType":"221","messageId":"222","endLine":18,"endColumn":15},{"ruleId":"225","severity":1,"message":"235","line":51,"column":6,"nodeType":"227","endLine":51,"endColumn":8,"suggestions":"236"},{"ruleId":"219","severity":1,"message":"234","line":21,"column":7,"nodeType":"221","messageId":"222","endLine":21,"endColumn":15},{"ruleId":"219","severity":1,"message":"234","line":21,"column":7,"nodeType":"221","messageId":"222","endLine":21,"endColumn":15},{"ruleId":"219","severity":1,"message":"234","line":18,"column":7,"nodeType":"221","messageId":"222","endLine":18,"endColumn":15},{"ruleId":"219","severity":1,"message":"237","line":5,"column":8,"nodeType":"221","messageId":"222","endLine":5,"endColumn":14},{"ruleId":"219","severity":1,"message":"234","line":41,"column":7,"nodeType":"221","messageId":"222","endLine":41,"endColumn":15},{"ruleId":"219","severity":1,"message":"238","line":37,"column":10,"nodeType":"221","messageId":"222","endLine":37,"endColumn":26},{"ruleId":"219","severity":1,"message":"239","line":73,"column":10,"nodeType":"221","messageId":"222","endLine":73,"endColumn":27},{"ruleId":"219","severity":1,"message":"240","line":102,"column":10,"nodeType":"221","messageId":"222","endLine":102,"endColumn":30},{"ruleId":"219","severity":1,"message":"241","line":178,"column":10,"nodeType":"221","messageId":"222","endLine":178,"endColumn":32},{"ruleId":"219","severity":1,"message":"241","line":214,"column":10,"nodeType":"221","messageId":"222","endLine":214,"endColumn":32},{"ruleId":"219","severity":1,"message":"241","line":252,"column":10,"nodeType":"221","messageId":"222","endLine":252,"endColumn":32},{"ruleId":"219","severity":1,"message":"242","line":311,"column":10,"nodeType":"221","messageId":"222","endLine":311,"endColumn":23},{"ruleId":"219","severity":1,"message":"242","line":350,"column":10,"nodeType":"221","messageId":"222","endLine":350,"endColumn":23},{"ruleId":"225","severity":1,"message":"243","line":57,"column":7,"nodeType":"227","endLine":57,"endColumn":9,"suggestions":"244"},{"ruleId":"225","severity":1,"message":"245","line":57,"column":7,"nodeType":"227","endLine":57,"endColumn":9,"suggestions":"246"},{"ruleId":"225","severity":1,"message":"247","line":58,"column":7,"nodeType":"227","endLine":58,"endColumn":9,"suggestions":"248"},{"ruleId":"219","severity":1,"message":"249","line":24,"column":10,"nodeType":"221","messageId":"222","endLine":24,"endColumn":15},{"ruleId":"225","severity":1,"message":"250","line":47,"column":7,"nodeType":"227","endLine":47,"endColumn":9,"suggestions":"251"},{"ruleId":"225","severity":1,"message":"252","line":38,"column":7,"nodeType":"227","endLine":38,"endColumn":9,"suggestions":"253"},{"ruleId":"225","severity":1,"message":"254","line":41,"column":6,"nodeType":"227","endLine":41,"endColumn":8,"suggestions":"255"},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'CLEAR_REGISTER_ERROR' is defined but never used.","'CLEAR_INPUT_DESC_ERROR' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category' and 'getSubmissions'. Either include them or remove the dependency array. If 'getSubmissions' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["258"],"React Hook useEffect has missing dependencies: 'getSubmissions' and 'userEmail'. Either include them or remove the dependency array. If 'getSubmissions' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["259"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ErrorBox' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'generateCharacter' and 'newChar'. Either include them or remove the dependency array. If 'generateCharacter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["260"],"'Loader' is defined but never used.","'inputCharDescAPI' is assigned a value but never used.","'inputCharImageAPI' is assigned a value but never used.","'inputCharIntrigueAPI' is assigned a value but never used.","'getSubmissionsResponse' is assigned a value but never used.","'authenticated' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'buildFNameElements' and 'submittedFNames'. Either include them or remove the dependency array.",["261"],"React Hook useEffect has missing dependencies: 'buildLNameElements' and 'submittedLNames'. Either include them or remove the dependency array.",["262"],"React Hook useEffect has missing dependencies: 'buildImageElements' and 'submittedImages'. Either include them or remove the dependency array.",["263"],"'races' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'buildRoleplayElements' and 'submittedRoleplays'. Either include them or remove the dependency array.",["264"],"React Hook useEffect has missing dependencies: 'buildIntrigueElements' and 'submittedIntrigues'. Either include them or remove the dependency array.",["265"],"React Hook useEffect has a missing dependency: 'modalData'. Either include it or remove the dependency array.",["266"],"no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},"Update the dependencies array to be: [category, getSubmissions, userEmail]",{"range":"285","text":"286"},"Update the dependencies array to be: [getSubmissions, userEmail]",{"range":"287","text":"288"},"Update the dependencies array to be: [generateCharacter, newChar]",{"range":"289","text":"290"},"Update the dependencies array to be: [buildFNameElements, submittedFNames]",{"range":"291","text":"292"},"Update the dependencies array to be: [buildLNameElements, submittedLNames]",{"range":"293","text":"294"},"Update the dependencies array to be: [buildImageElements, submittedImages]",{"range":"295","text":"296"},"Update the dependencies array to be: [buildRoleplayElements, submittedRoleplays]",{"range":"297","text":"298"},"Update the dependencies array to be: [buildIntrigueElements, submittedIntrigues]",{"range":"299","text":"300"},"Update the dependencies array to be: [modalData]",{"range":"301","text":"302"},[1415,1426],"[category, getSubmissions, userEmail]",[1490,1492],"[getSubmissions, userEmail]",[1372,1374],"[generateCharacter, newChar]",[1632,1634],"[buildFNameElements, submittedFNames]",[1593,1595],"[buildLNameElements, submittedLNames]",[1598,1600],"[buildImageElements, submittedImages]",[1302,1304],"[buildRoleplayElements, submittedRoleplays]",[1157,1159],"[buildIntrigueElements, submittedIntrigues]",[1246,1248],"[modalData]"]